//Generated by FuseIT WSDL2Apex (http://www.fuseit.com/Solutions/SFDC-Explorer/Help-WSDL-Parser.aspx)

@isTest
public class wwwDalkiaFrReferentielSocieteMockImpl implements WebServiceMock {
    public void doInvoke(
        Object stub,
        Object request,
        Map<String, Object> response,
        String endpoint,
        String soapAction,
        String requestName,
        String responseNS,
        String responseName,
        String responseType) {
            
            System.debug(LoggingLevel.INFO, 'wwwDalkiaFrReferentielSocieteMockImpl.doInvoke() - ' +
                         '\n request: ' + request +
                         '\n response: ' + response +
                         '\n endpoint: ' + endpoint +
                         '\n soapAction: ' + soapAction +
                         '\n requestName: ' + requestName +
                         '\n responseNS: ' + responseNS +
                         '\n responseName: ' + responseName +
                         '\n responseType: ' + responseType);
            
            if(request instanceOf wwwDalkiaFrReferentielSociete.ConsulterSociete) {
                system.debug('ConsulterSociete');
                Date myDate = Date.newInstance(2019, 03, 20);
                Time myTime = Time.newInstance(9, 11, 44, 88);
                DateTime dt = DateTime.newInstance(myDate, myTime);
                wwwDalkiaFrReferentielSociete.ConsulterSocieteResponse retValRes = new wwwDalkiaFrReferentielSociete.ConsulterSocieteResponse();
                retValRes.reponse = new wwwDalkiaFrReferentielSociete.ConsulterSocieteReponse();
                retValRes.reponse.informationsRetour = new wwwDalkiaFrReferentielSociete.informationsRetour();
                retValRes.reponse.informationsRetour.codeRetour = 'OK';
                retValRes.reponse.societe =  new wwwDalkiaFrReferentielSociete.societe();
                retValRes.reponse.societe.proprietesSociete = new wwwDalkiaFrReferentielSociete.proprietesSociete();
                retValRes.reponse.societe.proprietesSociete.DKCodeSociete = 'K00000089B';
                retValRes.reponse.societe.proprietesSociete.commentaire = '';
                retValRes.reponse.societe.proprietesSociete.typeImmatriculation = '';
                retValRes.reponse.societe.proprietesSociete.immatriculationLegale = '';
                retValRes.reponse.societe.proprietesSociete.denominationSociale = '';
                retValRes.reponse.societe.proprietesSociete.acronymeSigle = '';
                retValRes.reponse.societe.proprietesSociete.lieuImmatriculationLegale = '';
                retValRes.reponse.societe.proprietesSociete.formeJuridique = '';
                retValRes.reponse.societe.proprietesSociete.deviseCapitalSocial = '';
                
                retValRes.reponse.societe.listeLogos =  new wwwDalkiaFrReferentielSociete.listeLogos();
                retValRes.reponse.societe.listeLogos.logo = new List<wwwDalkiaFrReferentielSociete.logo>();
                wwwDalkiaFrReferentielSociete.logo log = new wwwDalkiaFrReferentielSociete.logo();
                retValRes.reponse.societe.listeLogos.logo.add(log);
                
                retValRes.reponse.societe.activite = new wwwDalkiaFrReferentielSociete.activite();
                retValRes.reponse.societe.activite.codeActiviteInternational = '123';
                
                retValRes.reponse.societe.categorie = new wwwDalkiaFrReferentielSociete.categorie();
                retValRes.reponse.societe.categorie.externe = new wwwDalkiaFrReferentielSociete.externe();
                retValRes.reponse.societe.categorie.externe.dateNotationExterne =  dt;
                retValRes.reponse.societe.categorie.externe.dateNotationInterne = dt;
                
                retValRes.reponse.societe.categorie.listeGroupesDalkia = new wwwDalkiaFrReferentielSociete.listeGroupesDalkia();
                retValRes.reponse.societe.categorie.listeGroupesDalkia.groupeDalkia =  new List<wwwDalkiaFrReferentielSociete.groupeDalkia>();
                wwwDalkiaFrReferentielSociete.groupeDalkia gd = new wwwDalkiaFrReferentielSociete.groupeDalkia();
                gd.dateFinExercice = dt; 
                gd.dateDebut = dt;
                gd.dateFin = dt;
                retValRes.reponse.societe.categorie.listeGroupesDalkia.groupeDalkia.add(gd);
                
                retValRes.reponse.societe.categorie.listeGroupesEDF = new wwwDalkiaFrReferentielSociete.listeGroupesEDF();
                retValRes.reponse.societe.categorie.listeGroupesEDF.groupeEDF = new List<wwwDalkiaFrReferentielSociete.groupeEDF>();
                wwwDalkiaFrReferentielSociete.groupeEDF gEDF = new wwwDalkiaFrReferentielSociete.groupeEDF();
                retValRes.reponse.societe.categorie.listeGroupesEDF.groupeEDF.add(gEDF);
                
                retValRes.reponse.societe.listeParents = new wwwDalkiaFrReferentielSociete.listeParents();
                retValRes.reponse.societe.listeParents.parent = new List<wwwDalkiaFrReferentielSociete.parent>();
                wwwDalkiaFrReferentielSociete.parent par = new wwwDalkiaFrReferentielSociete.parent();
                par.societeParente = '12';
                par.societeParente = '12';
                retValRes.reponse.societe.listeParents.parent.add(par);
                
                retValRes.reponse.societe.listeReporting = new wwwDalkiaFrReferentielSociete.listeReporting();
                retValRes.reponse.societe.listeReporting.reporting = new List<wwwDalkiaFrReferentielSociete.reporting>();
                wwwDalkiaFrReferentielSociete.reporting rep = new wwwDalkiaFrReferentielSociete.reporting();
                retValRes.reponse.societe.listeReporting.reporting.add(rep);
                
                retValRes.reponse.societe.metadonnees = new wwwDalkiaFrReferentielSociete.metadonnees();
                retValRes.reponse.societe.metadonnees.creationID = '123';
                retValRes.reponse.societe.metadonnees.updateID = '123';
                retValRes.reponse.societe.metadonnees.validationID = '123';
                response.put( 'response_x', retValRes);
            }
            else if(request instanceOf wwwDalkiaFrReferentielSociete.ModifierSocieteRestreint) {
                
                    system.debug('ModifierSocieteRestreint');
                    Date myDate = Date.newInstance(2019, 03, 20);
                    Time myTime = Time.newInstance(9, 11, 44, 88);
                    DateTime dt = DateTime.newInstance(myDate, myTime);
                    wwwDalkiaFrReferentielSociete.ModifierSocieteRestreintResponse retValRes = new wwwDalkiaFrReferentielSociete.ModifierSocieteRestreintResponse();
                    retValRes.reponse = new wwwDalkiaFrReferentielSociete.ModifierSocieteRestreintReponse();
                    retValRes.reponse.informationsRetour = new wwwDalkiaFrReferentielSociete.informationsRetour();
                    retValRes.reponse.informationsRetour.codeRetour = 'OK';
                    retValRes.reponse.societe =  new wwwDalkiaFrReferentielSociete.societe();
                    retValRes.reponse.societe.proprietesSociete = new wwwDalkiaFrReferentielSociete.proprietesSociete();
                    retValRes.reponse.societe.proprietesSociete.DKCodeSociete = 'K00000089B';
                    retValRes.reponse.societe.proprietesSociete.commentaire = '';
                    retValRes.reponse.societe.proprietesSociete.typeImmatriculation = '';
                    retValRes.reponse.societe.proprietesSociete.immatriculationLegale = '';
                    retValRes.reponse.societe.proprietesSociete.denominationSociale = 'test';
                    retValRes.reponse.societe.proprietesSociete.acronymeSigle = '';
                    retValRes.reponse.societe.proprietesSociete.lieuImmatriculationLegale = '';
                    retValRes.reponse.societe.proprietesSociete.formeJuridique = '';
                    retValRes.reponse.societe.proprietesSociete.deviseCapitalSocial = '';
                    
                    retValRes.reponse.societe.listeLogos =  new wwwDalkiaFrReferentielSociete.listeLogos();
                    retValRes.reponse.societe.listeLogos.logo = new List<wwwDalkiaFrReferentielSociete.logo>();
                    wwwDalkiaFrReferentielSociete.logo log = new wwwDalkiaFrReferentielSociete.logo();
                    log.statutLogo = true;
                    retValRes.reponse.societe.listeLogos.logo.add(log);
                    
                    retValRes.reponse.societe.activite = new wwwDalkiaFrReferentielSociete.activite();
                    retValRes.reponse.societe.activite.codeActiviteInternational = '123';
                    
                    retValRes.reponse.societe.categorie = new wwwDalkiaFrReferentielSociete.categorie();
                    retValRes.reponse.societe.categorie.externe = new wwwDalkiaFrReferentielSociete.externe();
                    retValRes.reponse.societe.categorie.externe.dateNotationExterne =  dt;
                    retValRes.reponse.societe.categorie.externe.dateNotationInterne = dt;
                    retValRes.reponse.societe.categorie.externe.grandCompteDalkia = true;
                    retValRes.reponse.societe.categorie.externe.grandCompteEDF = true;
                    
                    retValRes.reponse.societe.categorie.listeGroupesDalkia = new wwwDalkiaFrReferentielSociete.listeGroupesDalkia();
                    retValRes.reponse.societe.categorie.listeGroupesDalkia.groupeDalkia =  new List<wwwDalkiaFrReferentielSociete.groupeDalkia>();
                    wwwDalkiaFrReferentielSociete.groupeDalkia gd = new wwwDalkiaFrReferentielSociete.groupeDalkia();
                    gd.dateFinExercice = dt; 
                    gd.statutGestionCO2 = true;
                    gd.dateDebut = dt;
                    gd.dateFin = dt;
                    retValRes.reponse.societe.categorie.listeGroupesDalkia.groupeDalkia.add(gd);
                    
                    retValRes.reponse.societe.categorie.listeGroupesEDF = new wwwDalkiaFrReferentielSociete.listeGroupesEDF();
                    retValRes.reponse.societe.categorie.listeGroupesEDF.groupeEDF = new List<wwwDalkiaFrReferentielSociete.groupeEDF>();
                    wwwDalkiaFrReferentielSociete.groupeEDF gEDF = new wwwDalkiaFrReferentielSociete.groupeEDF();
                    retValRes.reponse.societe.categorie.listeGroupesEDF.groupeEDF.add(gEDF);
                    
                    retValRes.reponse.societe.listeParents = new wwwDalkiaFrReferentielSociete.listeParents();
                    retValRes.reponse.societe.listeParents.parent = new List<wwwDalkiaFrReferentielSociete.parent>();
                    wwwDalkiaFrReferentielSociete.parent par = new wwwDalkiaFrReferentielSociete.parent();
                    par.societeParente = '12';
                    par.societeParente = '12';
                    par.statutLienParent =  true;
                    retValRes.reponse.societe.listeParents.parent.add(par);
                    
                    retValRes.reponse.societe.listeReporting = new wwwDalkiaFrReferentielSociete.listeReporting();
                    retValRes.reponse.societe.listeReporting.reporting = new List<wwwDalkiaFrReferentielSociete.reporting>();
                    wwwDalkiaFrReferentielSociete.reporting rep = new wwwDalkiaFrReferentielSociete.reporting();
                    retValRes.reponse.societe.listeReporting.reporting.add(rep);
                    
                    retValRes.reponse.societe.metadonnees = new wwwDalkiaFrReferentielSociete.metadonnees();
                    retValRes.reponse.societe.metadonnees.creationID = '123';
                    retValRes.reponse.societe.metadonnees.updateID = '123';
                    retValRes.reponse.societe.metadonnees.validationID = '123';
                    response.put( 'response_x', retValRes);
                
            }
            else if(request instanceOf wwwDalkiaFrReferentielSociete.RechercherSociete) {
                response.put( 'response_x', new wwwDalkiaFrReferentielSociete.RechercherSocieteResponse());
            }
        }
}