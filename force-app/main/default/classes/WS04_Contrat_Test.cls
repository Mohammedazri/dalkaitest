@isTest
public class WS04_Contrat_Test {
    @isTest
    public static void insertContratTest(){
        /*Profile p = [SELECT Id FROM Profile WHERE id = : Label.AdminProfileId];
           User user = testUtils.CreateUser('testU', 'testU@testorg.com', 'testU', p.Id, 'testU@testorg.com');

           user.BypassFilters__c = true;
           user.BypassValidationRules__c = true;*/

        User user = testUtilsC360.CreateUser('testU', 'testU@testorg.com', 'testU', Label.AdminProfileId, 'testU@testorg.com');
        user.ReferentielId__c = 'K0935246';
        user = testUtilsC360.bypassUser(user);
        insert user;

        WS04_Contrat.Contrat cont1 = new WS04_Contrat.Contrat();
        cont1.proprietesContrat =  new WS04_Contrat.Propriete_Contrat();

        cont1.contratCadre =  new WS04_Contrat.Contrat_Cadre();
        cont1.listeDocuments =  new WS04_Contrat.listeDocuments();
        cont1.listeDocuments.document = new List<WS04_Contrat.Documents>();
        WS04_Contrat.Documents doc3 = new WS04_Contrat.Documents();
        cont1.listeDocuments.document.add(doc3);
        cont1.durees =  new WS04_Contrat.Durees();
        cont1.listeResumes =  new WS04_Contrat.listeResumes();
        cont1.listeServices =  new WS04_Contrat.listeServices();
        cont1.listePartenaires =  new WS04_Contrat.listePartenaires();
        cont1.listeAffaires =  new WS04_Contrat.listeAffaires();
        cont1.listeAffaires.affaire = new List<WS04_Contrat.Affaires>();
        WS04_Contrat.Affaires aff2 = new WS04_Contrat.Affaires();
        aff2.statutLienAffaire = true;
        cont1.listeAffaires.affaire.add(aff2);
        cont1.listeProjetsFinance =  new WS04_Contrat.listeProjetsFinance();
        cont1.listeResponsables =  new WS04_Contrat.listeResponsables();
        cont1.numerotationContrat =  new WS04_Contrat.Numerotation_contrat();
        cont1.metadonneesContrat =  new WS04_Contrat.Metadonnees_contrat();
        cont1.metadonneesContrat.validationId = 'K0935246';
        cont1.metadonneesContrat.creationId = 'K0935246';
        cont1.metadonneesContrat.updateId = 'K0935246';
        cont1.metadonneesContrat.validationDate = Date.today();
        cont1.metadonneesContrat.creationDate = Date.today();
        System.runAs(user){
            Account a1 = testUtilsC360.createAccount('testAccount', 'Lebanon', 'Privé', Label.WS11_OUV, false, 'EDF', '345345', 'test');
            Account a2 = testUtilsC360.createAccount('testAccountSociete', 'Lebanon', 'Privé', Label.WS11_OUV, true, 'DLK', '112233', 'abcdef124');
            insert new List<Account> {a1, a2};

            Contact cont = testUtilsC360.createContact('TEST', a1.Id, null, true);
            insert new List<Contact> {cont};

            opportunity myOpp = testUtilsC360.createOpportunityMereNouveauReseau('testOppRéseau', '2022', date.today(), Label.OpportunityStatusEnCours, Label.OpportunityStagePiste, a1.Id, a2.Id, user.Id);
            insert myOpp;

            testUtilsC360.completeeFDS(new set<Id> {myOpp.Id});

            OpportuniteContact__c oppCont1 = testUtilsC360.createOpportunityContrat(myOpp.Id, cont.Id);
            insert new List<OpportuniteContact__c> {oppCont1};

            myOpp = testUtilsC360.realiseOpportunity(myOpp);
            Update new List<Opportunity> {myOpp};

            List<Contrat__c> contratGeneree =  testUtilsC360.getContratGeneree(new set<Id> {myOpp.Id});

            Contrat__c c1 = contratGeneree[0];

            c1.DKCodeSurContrat__c = '123';
            c1.ReconductionFaitAutorisee__c = true;
            c1.Name = 'testtingg';
            c1.TypeReconduction__c = 'RNUL';
            c1.DatePriseEffet__c = System.Today() - 2;
            c1.DureeInitialeContrat__c = 1;
            c1.NombreReconductionsPassees__c = 1;
            c1.DureeReconduction__c = 1;
            c1.NombreReconductionsAutorisees__c = 1;
            c1.DureeProlongationTotale__c = 1;
            update c1;

            /*
               c1.NomPartenaire__c = a1.Id;
               c1.EstContratcadre__c = true;

             */

            WS04_Contrat.Contrat cont2 = new WS04_Contrat.Contrat();
            cont2.proprietesContrat =  new WS04_Contrat.Propriete_Contrat();
            cont2.metadonneesContrat =  new WS04_Contrat.Metadonnees_contrat();
            cont2.metadonneesContrat.validationId = 'K0935246';
            cont2.metadonneesContrat.creationId = 'K0935246';
            cont2.metadonneesContrat.updateId = 'K0935246';
            cont2.metadonneesContrat.validationDate = Date.today();
            cont2.metadonneesContrat.creationDate = Date.today();
            cont2.proprietesContrat.DKCodeContrat = '123';
            cont2.proprietesContrat.libelle = 'test';
            cont2.proprietesContrat.commentaire = 'test';
            cont2.proprietesContrat.controleContrat = 'NC';
            cont2.proprietesContrat.statutFacturation = 'ACT';
            cont2.proprietesContrat.motifRejet = 'RENOUV';
            cont2.proprietesContrat.statutServices = 'INCMPL';
            cont2.proprietesContrat.categorieContrat = 'VTE';
            cont2.proprietesContrat.interco = 'ICO4';
            cont2.proprietesContrat.formeJuridique = 'FJC01';
            cont2.proprietesContrat.langue = 'FR';
            cont2.proprietesContrat.devise = 'EUR';
            cont2.proprietesContrat.numeroDossier = 'test';
            cont2.proprietesContrat.contratDorigine = 'test';
            cont2.proprietesContrat.estContratNational = true;
            cont2.proprietesContrat.natureContrat = 'VTE01';
            cont2.proprietesContrat.provenanceContrat = 'VTE90';
            cont2.proprietesContrat.dateDeValidation = System.today();
            cont2.proprietesContrat.motifDeFermeture = 'RENOUV';
            cont2.proprietesContrat.conditionDeFermeture = 'CFER02';
            cont2.proprietesContrat.dateDeFin = System.today();
            cont2.proprietesContrat.estContratCadre = true;
            cont2.proprietesContrat.reportingContrat = 'test';
            cont2.proprietesContrat.typeContratFacturation = 'IND';
            cont2.contratCadre =  new WS04_Contrat.Contrat_Cadre();
            cont2.contratCadre.contratCadre = 'test';
            cont2.listeDocuments =  new WS04_Contrat.listeDocuments();
            cont2.listeDocuments.document = new List<WS04_Contrat.Documents>();
            WS04_Contrat.Documents doc1 = new WS04_Contrat.Documents();
            doc1.numeroPiece = 'test';
            doc1.referenceDuree = true;
            doc1.natureDocument = 'test';
            doc1.origineDocument = 'test';
            doc1.referenceDocument = 'test';
            doc1.titreDocument = 'test';
            doc1.dateSignature = System.today();
            doc1.datePriseEffet = System.today();
            doc1.statutDocument = 'test';
            doc1.dateStockage = System.today();
            doc1.avenants = new WS04_Contrat.Avenants();
            doc1.metadonneesDocument = new WS04_Contrat.Metadonnees_document();
            doc1.metadonneesDocument.creationDate = System.today();
            doc1.metadonneesDocument.creationId = 'test';
            doc1.metadonneesDocument.updateDate = System.today();
            doc1.metadonneesDocument.updateId = 'K0935246';
            doc1.metadonneesDocument.validationDate = System.today();
            doc1.metadonneesDocument.validationId = 'K0935246';
            cont2.listeDocuments.document.add(doc1);
            WS04_Contrat.Documents doc2 = new WS04_Contrat.Documents();
            doc2.numeroPiece = 'test';
            doc2.referenceDuree = true;
            doc2.natureDocument = 'test';
            doc2.origineDocument = 'test';
            doc2.referenceDocument = 'test';
            doc2.titreDocument = 'test';
            doc2.dateSignature = System.today();
            doc2.datePriseEffet = System.today();
            doc2.niveauConfidentialite = 'DOC_C02';
            doc2.commentaireDocument = 'test';
            doc2.statutDocument = 'test';
            doc2.dateStockage = System.today();
            doc2.avenants = new WS04_Contrat.Avenants();
            doc2.avenants.MAJConditionsDuree = true;
            doc2.avenants.MAJConditionsTechniques = true;
            doc2.avenants.MAJConditionsFacturation = true;
            doc2.avenants.ajoutPrestations = true;
            doc2.avenants.retraitPrestations = true;
            doc2.avenants.autresModifications = true;
            doc2.metadonneesDocument = new WS04_Contrat.Metadonnees_document();
            doc2.metadonneesDocument.creationDate = System.today();
            doc2.metadonneesDocument.creationId = 'test';
            doc2.metadonneesDocument.updateDate = System.today();
            doc2.metadonneesDocument.updateId = 'K0935246';
            doc2.metadonneesDocument.validationDate = System.today();
            doc2.metadonneesDocument.validationId = 'K0935246';
            cont2.listeDocuments.document.add(doc2);
            cont2.durees =  new WS04_Contrat.Durees();
            cont2.durees.datePriseEffetInitiale = system.today();
            cont2.durees.dureeInitialeContrat = 2;
            cont2.durees.typeReconduction = 'RNUL';
            cont2.durees.dureeReconduction = 2;
            cont2.durees.dureePreavis = 2;
            cont2.durees.nombreReconductionAutorise = 2;
            cont2.durees.dureeMaximaleCumulee = 2;
            cont2.durees.reconductionFaitAutorisee = true;
            //cont2.durees.dateProchainPreavis = system.today();
            //cont2.durees.dateProchaineEcheance = system.today();
            cont2.listeResumes =  new WS04_Contrat.listeResumes();
            cont2.listeServices =  new WS04_Contrat.listeServices();
            cont2.listePartenaires =  new WS04_Contrat.listePartenaires();
            cont2.listePartenaires.partenaire = new List<WS04_Contrat.Partenaires>();
            WS04_Contrat.Partenaires part1 = new WS04_Contrat.Partenaires();
            part1.partenaire = 'test';
            part1.matriculeSociete = 'test';
            part1.adressePartenaire = 'test';
            part1.rolePartenaire = 'FACT';
            part1.modeReglement = 'test';
            part1.statutLienPartenaire = true;
            part1.listeContacts = new WS04_Contrat.listeContacts();
            WS04_Contrat.Partenaires part11 = new WS04_Contrat.Partenaires();
            part11.partenaire = 'test';
            part11.matriculeSociete = 'test';
            part11.adressePartenaire = 'test';
            part11.rolePartenaire = 'REPR';
            part11.modeReglement = 'test';
            part11.statutLienPartenaire = false;
            part11.listeContacts = new WS04_Contrat.listeContacts();
            cont2.listePartenaires.partenaire.add(part11);
            cont2.listePartenaires.partenaire.add(part1);
            WS04_Contrat.Partenaires part2 = new WS04_Contrat.Partenaires();
            part2.partenaire = 'test';
            part2.matriculeSociete = 'test';
            part2.adressePartenaire = 'test';
            part2.rolePartenaire = 'SIGN';
            part2.modeReglement = 'test';
            part2.statutLienPartenaire = true;
            part2.listeContacts = new WS04_Contrat.listeContacts();
            cont2.listePartenaires.partenaire.add(part2);
            WS04_Contrat.Partenaires part3 = new WS04_Contrat.Partenaires();
            part3.partenaire = 'test';
            part3.matriculeSociete = 'test';
            part3.adressePartenaire = 'test';
            part3.rolePartenaire = 'PRST';
            part3.modeReglement = 'test';
            part3.statutLienPartenaire = true;
            part3.listeContacts = new WS04_Contrat.listeContacts();
            cont2.listePartenaires.partenaire.add(part3);
            WS04_Contrat.Partenaires part4 = new WS04_Contrat.Partenaires();
            part4.partenaire = 'test';
            part4.matriculeSociete = 'test';
            part4.adressePartenaire = 'test';
            part4.rolePartenaire = 'PRST';
            part4.modeReglement = 'test';
            part4.listeContacts = new WS04_Contrat.listeContacts();
            cont2.listePartenaires.partenaire.add(part4);
            WS04_Contrat.Partenaires part5 = new WS04_Contrat.Partenaires();
            part5.partenaire = 'test';
            part5.matriculeSociete = 'test';
            part5.adressePartenaire = 'test';
            part5.rolePartenaire = 'SIGN';
            part5.modeReglement = 'test';
            part5.statutLienPartenaire = true;
            part5.listeContacts = new WS04_Contrat.listeContacts();
            cont2.listePartenaires.partenaire.add(part5);
            cont2.listeAffaires =  new WS04_Contrat.listeAffaires();
            cont2.listeAffaires.affaire = new List<WS04_Contrat.Affaires>();
            WS04_Contrat.Affaires aff1 = new WS04_Contrat.Affaires();
            aff1.affaire = 'test';
            aff1.statutLienAffaire = true;
            cont2.listeAffaires.affaire.add(aff1);
            cont2.listeProjetsFinance =  new WS04_Contrat.listeProjetsFinance();
            cont2.listeProjetsFinance.projetFinance = new List<WS04_Contrat.Projets_finance>();
            WS04_Contrat.Projets_finance pf1 = new WS04_Contrat.Projets_finance();
            pf1.projetFinance = 'test';
            pf1.tacheFinance = 'test';
            pf1.statutLienTF = true;
            cont2.listeProjetsFinance.projetFinance.add(pf1);
            WS04_Contrat.Projets_finance pf2 = new WS04_Contrat.Projets_finance();
            pf2.projetFinance = 'test';
            pf2.tacheFinance = 'test';
            pf2.statutLienTF = false;
            cont2.listeProjetsFinance.projetFinance.add(pf2);
            WS04_Contrat.Projets_finance pf3 = new WS04_Contrat.Projets_finance();
            pf3.statutLienTF = true;
            cont2.listeProjetsFinance.projetFinance.add(pf3);
            cont2.listeResponsables =  new WS04_Contrat.listeResponsables();
            cont2.listeResponsables.responsable = new List<WS04_Contrat.Responsables>();
            WS04_Contrat.Responsables respon1 = new WS04_Contrat.Responsables();
            respon1.responsableContrat = 'test';
            respon1.perimetreResponsable = 'ROL01';
            respon1.statutLienResponsable = true;
            cont2.listeResponsables.responsable.add(respon1);
            WS04_Contrat.Responsables respon2 = new WS04_Contrat.Responsables();
            respon2.perimetreResponsable = 'ROL01';
            respon2.statutLienResponsable = true;
            cont2.listeResponsables.responsable.add(respon2);
            cont2.numerotationContrat =  new WS04_Contrat.Numerotation_contrat();
            cont2.metadonneesContrat =  new WS04_Contrat.Metadonnees_contrat();
            cont2.metadonneesContrat.creationDate = system.today();
            cont2.metadonneesContrat.creationId = 'test';
            cont2.metadonneesContrat.updateDate = system.today();
            cont2.metadonneesContrat.updateId = 'test';
            cont2.metadonneesContrat.validationDate = system.today();
            cont2.metadonneesContrat.validationId = 'test';
            cont2.listeServices = new WS04_Contrat.listeServices();
            cont2.listeServices.service = new List<WS04_Contrat.Services>();
            WS04_Contrat.Services serv = new WS04_Contrat.Services();
            serv.penalitesAssociees = true;
            serv.perimetreRealisation = 'test';
            serv.service = '1234';
            serv.statutLienService = true;
            cont2.listeServices.service.add(serv);

            test.startTest();
            Response resp1 = WS04_Contrat.insertContrat(cont1);
            Response resp2 = WS04_Contrat.insertContrat(cont2);
            test.stopTest();
        }
    }
}