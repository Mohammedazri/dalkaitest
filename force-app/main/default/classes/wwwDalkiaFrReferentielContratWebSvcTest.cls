//Generated by FuseIT WSDL2Apex (http://www.fuseit.com/Solutions/SFDC-Explorer/Help-WSDL-Parser.aspx)

@isTest
private class wwwDalkiaFrReferentielContratWebSvcTest {

    @isTest static void coverGeneratedCodeTypes() {
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat parentObject = new wwwDalkiaFrReferentielContrat();
        new wwwDalkiaFrReferentielContrat.affaire();
        new wwwDalkiaFrReferentielContrat.affaireCDC1();
        new wwwDalkiaFrReferentielContrat.AjouterDocumentsContractuels();
        new wwwDalkiaFrReferentielContrat.ajouterDocumentsContractuelsReponse();
        new wwwDalkiaFrReferentielContrat.ajouterDocumentsContractuelsRequete();
        new wwwDalkiaFrReferentielContrat.AjouterDocumentsContractuelsResponse();
        new wwwDalkiaFrReferentielContrat.avenants();
        new wwwDalkiaFrReferentielContrat.avenantsDC1();
        new wwwDalkiaFrReferentielContrat.avenantsDC2();
        new wwwDalkiaFrReferentielContrat.ConsulterContrat();
        new wwwDalkiaFrReferentielContrat.consulterContratReponse();
        new wwwDalkiaFrReferentielContrat.consulterContratRequete();
        new wwwDalkiaFrReferentielContrat.ConsulterContratResponse();
        new wwwDalkiaFrReferentielContrat.ConsulterDocument();
        new wwwDalkiaFrReferentielContrat.consulterDocumentReponse();
        new wwwDalkiaFrReferentielContrat.consulterDocumentRequete();
        new wwwDalkiaFrReferentielContrat.ConsulterDocumentResponse();
        new wwwDalkiaFrReferentielContrat.contact();
        new wwwDalkiaFrReferentielContrat.contactC1();
        new wwwDalkiaFrReferentielContrat.contactCDC1();
        new wwwDalkiaFrReferentielContrat.contrat();
        new wwwDalkiaFrReferentielContrat.contratC1();
        new wwwDalkiaFrReferentielContrat.contratC2();
        new wwwDalkiaFrReferentielContrat.contratCadre();
        new wwwDalkiaFrReferentielContrat.contratCadreCDC1();
        new wwwDalkiaFrReferentielContrat.contratCDC1();
        new wwwDalkiaFrReferentielContrat.contratCID();
        new wwwDalkiaFrReferentielContrat.contratRecherche();
        new wwwDalkiaFrReferentielContrat.contratsCID();
        new wwwDalkiaFrReferentielContrat.CreerContrat();
        new wwwDalkiaFrReferentielContrat.creerContratReponse();
        new wwwDalkiaFrReferentielContrat.creerContratRequete();
        new wwwDalkiaFrReferentielContrat.CreerContratResponse();
        new wwwDalkiaFrReferentielContrat.CreerModifierResumeContrat();
        new wwwDalkiaFrReferentielContrat.creerModifierResumeContratReponse();
        new wwwDalkiaFrReferentielContrat.creerModifierResumeContratRequete();
        new wwwDalkiaFrReferentielContrat.CreerModifierResumeContratResponse();
        new wwwDalkiaFrReferentielContrat.document();
        new wwwDalkiaFrReferentielContrat.documentCDC1();
        new wwwDalkiaFrReferentielContrat.documentContractuel();
        new wwwDalkiaFrReferentielContrat.documentDC1();
        new wwwDalkiaFrReferentielContrat.documentDC2();
        new wwwDalkiaFrReferentielContrat.documentsContractuels();
        new wwwDalkiaFrReferentielContrat.documentsContractuelsDC1();
        new wwwDalkiaFrReferentielContrat.documentsContractuelsDC2();
        new wwwDalkiaFrReferentielContrat.durees();
        new wwwDalkiaFrReferentielContrat.dureesC1();
        new wwwDalkiaFrReferentielContrat.dureesCDC1();
        new wwwDalkiaFrReferentielContrat.informationsRetour();
        new wwwDalkiaFrReferentielContrat.listeAffaires();
        new wwwDalkiaFrReferentielContrat.listeAffairesCDC1();
        new wwwDalkiaFrReferentielContrat.listeContacts();
        new wwwDalkiaFrReferentielContrat.listeContactsC1();
        new wwwDalkiaFrReferentielContrat.listeContactsCDC1();
        new wwwDalkiaFrReferentielContrat.listeContrats();
        new wwwDalkiaFrReferentielContrat.listeContratsCID();
        new wwwDalkiaFrReferentielContrat.listeContratsDelta();
        new wwwDalkiaFrReferentielContrat.listeDocuments();
        new wwwDalkiaFrReferentielContrat.listeDocumentsCDC1();
        new wwwDalkiaFrReferentielContrat.listeDocumentsContractuels();
        new wwwDalkiaFrReferentielContrat.listePartenaires();
        new wwwDalkiaFrReferentielContrat.listePartenairesC1();
        new wwwDalkiaFrReferentielContrat.listePartenairesCDC1();
        new wwwDalkiaFrReferentielContrat.listePartenairesCID();
        new wwwDalkiaFrReferentielContrat.listePrestations();
        new wwwDalkiaFrReferentielContrat.listePrestationsC1();
        new wwwDalkiaFrReferentielContrat.listePrestationsCDC1();
        new wwwDalkiaFrReferentielContrat.listeProjetsFinance();
        new wwwDalkiaFrReferentielContrat.listeProjetsFinanceCDC1();
        new wwwDalkiaFrReferentielContrat.listeProjetsFinanceCID();
        new wwwDalkiaFrReferentielContrat.listeResponsables();
        new wwwDalkiaFrReferentielContrat.listeResponsablesC1();
        new wwwDalkiaFrReferentielContrat.listeResponsablesCDC1();
        new wwwDalkiaFrReferentielContrat.listeResponsablesCID();
        new wwwDalkiaFrReferentielContrat.listeResumes();
        new wwwDalkiaFrReferentielContrat.listeResumesC2();
        new wwwDalkiaFrReferentielContrat.listeResumesCDC1();
        new wwwDalkiaFrReferentielContrat.listeServices();
        new wwwDalkiaFrReferentielContrat.listeServicesC1();
        new wwwDalkiaFrReferentielContrat.listeServicesCDC1();
        new wwwDalkiaFrReferentielContrat.metadonnees();
        new wwwDalkiaFrReferentielContrat.metadonneesC1();
        new wwwDalkiaFrReferentielContrat.metadonneesC2();
        new wwwDalkiaFrReferentielContrat.metadonneesCDC1();
        new wwwDalkiaFrReferentielContrat.metadonneesDC1();
        new wwwDalkiaFrReferentielContrat.metadonneesDC2();
        new wwwDalkiaFrReferentielContrat.ModifierContrat();
        new wwwDalkiaFrReferentielContrat.ModifierContratCID();
        new wwwDalkiaFrReferentielContrat.ModifierContratCIDReponse();
        new wwwDalkiaFrReferentielContrat.ModifierContratCIDRequete();
        new wwwDalkiaFrReferentielContrat.ModifierContratCIDResponse();
        new wwwDalkiaFrReferentielContrat.modifierContratReponse();
        new wwwDalkiaFrReferentielContrat.modifierContratRequete();
        new wwwDalkiaFrReferentielContrat.ModifierContratResponse();
        new wwwDalkiaFrReferentielContrat.ModifierDocumentContractuel();
        new wwwDalkiaFrReferentielContrat.modifierDocumentContractuelReponse();
        new wwwDalkiaFrReferentielContrat.modifierDocumentContractuelRequete();
        new wwwDalkiaFrReferentielContrat.ModifierDocumentContractuelResponse();
        new wwwDalkiaFrReferentielContrat.numerotationContrat();
        new wwwDalkiaFrReferentielContrat.numerotationContratCDC1();
        new wwwDalkiaFrReferentielContrat.partenaire();
        new wwwDalkiaFrReferentielContrat.partenaireC1();
        new wwwDalkiaFrReferentielContrat.partenaireCDC1();
        new wwwDalkiaFrReferentielContrat.partenaireCID();
        new wwwDalkiaFrReferentielContrat.prestation();
        new wwwDalkiaFrReferentielContrat.prestationC1();
        new wwwDalkiaFrReferentielContrat.prestationCDC1();
        new wwwDalkiaFrReferentielContrat.projetFinance();
        new wwwDalkiaFrReferentielContrat.projetFinanceCDC1();
        new wwwDalkiaFrReferentielContrat.projetFinanceCID();
        new wwwDalkiaFrReferentielContrat.proprietesContrat();
        new wwwDalkiaFrReferentielContrat.proprietesContratC1();
        new wwwDalkiaFrReferentielContrat.proprietesContratC2();
        new wwwDalkiaFrReferentielContrat.proprietesContratCDC1();
        new wwwDalkiaFrReferentielContrat.RechercherContrat();
        new wwwDalkiaFrReferentielContrat.rechercherContratReponse();
        new wwwDalkiaFrReferentielContrat.rechercherContratRequete();
        new wwwDalkiaFrReferentielContrat.RechercherContratResponse();
        new wwwDalkiaFrReferentielContrat.RenouvelerContrat();
        new wwwDalkiaFrReferentielContrat.renouvelerContratReponse();
        new wwwDalkiaFrReferentielContrat.renouvelerContratRequete();
        new wwwDalkiaFrReferentielContrat.RenouvelerContratResponse();
        new wwwDalkiaFrReferentielContrat.responsable();
        new wwwDalkiaFrReferentielContrat.responsableC1();
        new wwwDalkiaFrReferentielContrat.responsableCDC1();
        new wwwDalkiaFrReferentielContrat.responsableCID();
        new wwwDalkiaFrReferentielContrat.resume();
        new wwwDalkiaFrReferentielContrat.resumeC2();
        new wwwDalkiaFrReferentielContrat.resumeCDC1();
        new wwwDalkiaFrReferentielContrat.service();
        new wwwDalkiaFrReferentielContrat.serviceC1();
        new wwwDalkiaFrReferentielContrat.serviceCDC1();
    }
    @isTest static void coverCodeForAjouterDocumentContractuel(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        //System.assertEquals(null, testObject.AjouterDocumentContractuel(null));
    }
    @isTest static void coverCodeForAjouterDocumentsDureesContractuels(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        // System.assertEquals(null, testObject.AjouterDocumentsDureesContractuels(null));
    }
    @isTest static void coverCodeForConsulterContrat(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Contrat__c cont = new Contrat__c();
            cont.DKCodeSurContrat__c = 'K00000089B';
            cont.NomPartenaire__c = myaccount.Id;
            cont.DureeInitialeContrat__c = 1;
            cont.DatePriseEffet__c = System.Today() -2;
            cont.NombreReconductionsPassees__c = 1;
            cont.DureeReconduction__c = 1;
            cont.NombreReconductionsAutorisees__c = 1;
            cont.DureeProlongationTotale__c = 1;
            insert cont;
            test.startTest();
            LC43_ConsulterContrat_Controller.consulterContrat(cont.id);
            test.stopTest();
        }
        //System.assertEquals(null, testObject.ConsulterContrat(null));
    }
    /*@isTest static void coverCodeForConsulterDocument(){
       Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
       wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
       System.assertEquals(null, testObject.ConsulterDocument(null));
       }*/
    @isTest static void coverCodeForCreerContrat1(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            LC51_CreateContract_Controller.getCurrentUserProfile();
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp.Type_pers__c = Label.Renouvellement;
            opp.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp.OpportuniteMere__c = opp1.id;
            insert opp;

            Contrat__c cont = new Contrat__c();
            cont.OpportuniteCommerciale__c = opp.id;
            //cont.DKCodeSurContrat__c = 'K00000089B';
            cont.FormeJuridique__c = null;
            cont.TypeReconduction__c = null;
            cont.EstContratNational__c = true;
            cont.Tech_ModfierContrat__c = false;
            cont.NomPartenaire__c = myaccount.Id;
            cont.DureeInitialeContrat__c = 1;
            cont.DatePriseEffet__c = System.Today() -2;
            cont.NombreReconductionsPassees__c = 1;
            cont.DureeReconduction__c = 1;
            cont.NombreReconductionsAutorisees__c = 1;
            cont.DureeProlongationTotale__c = 1;
            insert cont;

            Contrat__c cont2 = new Contrat__c();
            cont2.OpportuniteCommerciale__c = cont2.id;
            cont2.Tech_ModfierContrat__c = false;
            //cont2.DKCodeSurContrat__c = 'K00000089A';
            cont2.FormeJuridique__c = null;
            cont2.TypeReconduction__c = null;
            cont2.EstContratNational__c = true;
            cont2.TypeReconduction__c = 'RTACerr';
            cont2.NomPartenaire__c = myaccount.Id;
            cont2.DureeInitialeContrat__c = 1;
            cont2.DatePriseEffet__c = System.Today() -2;
            cont2.NombreReconductionsPassees__c = 1;
            cont2.DureeReconduction__c = 1;
            cont2.NombreReconductionsAutorisees__c = 1;
            cont2.DureeProlongationTotale__c = 1;
            insert cont2;

            test.startTest();
            LC51_CreateContract_Controller.getCurrentObject(cont.id);
            LC51_CreateContract_Controller.creerContrat(cont.id);
            LC51_CreateContract_Controller.creerContrat(cont2.id);
            test.stopTest();
        }
        //System.assertEquals(null, testObject.CreerContrat(null));
    }

    @isTest static void coverCodeForCreerContrat2(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp2 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp2.StageName = 'Réalisation';
            opp2.Statut__c = 'Gagnée';
            opp2.Type_pers__c = Label.PV_Evolution;
            opp2.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Evolution).getRecordTypeId();
            insert opp2;

            Opportunity opp5 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp5.StageName = 'Réalisation';
            opp5.Statut__c = 'Gagnée';
            opp5.Type_pers__c = Label.Renouvellement;
            opp5.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp5.OpportuniteMere__c = opp1.id;
            insert opp5;

            Contrat__c cont8 = new Contrat__c();
            cont8.DureeReconduction__c = 2;
            cont8.OpportuniteCommerciale__c = opp5.id;
            cont8.DureePreavis__c = 1;
            cont8.EstContratNational__c = true;
            cont8.NombreReconductionsAutorisees__c = 1;
            cont8.DKCodeSurContrat__c = 'K00000089Y';
            cont8.CategorieContrat__c = 'VTE';
            cont8.FormeJuridique__c = 'FJC01';
            cont8.Statut__c = 'OUV';
            cont8.TypeReconduction__c = 'RTAC';
            cont8.NomPartenaire__c = myaccount.Id;
            cont8.DureeInitialeContrat__c = 1;
            cont8.DatePriseEffet__c = System.Today() -2;
            cont8.NombreReconductionsPassees__c = 1;
            cont8.DureeReconduction__c = 1;
            cont8.NombreReconductionsAutorisees__c = 1;
            cont8.DureeProlongationTotale__c = 1;
            //insert cont8;

            Contrat__c cont2 = new Contrat__c();
            cont2.CategorieContrat__c = 'VTE';
            cont2.DureeReconduction__c = 2;
            cont2.OpportuniteCommerciale__c = opp5.id;
            cont2.DureePreavis__c = 1;
            cont2.EstContratNational__c = true;
            cont2.NombreReconductionsAutorisees__c = 1;
            cont2.DKCodeSurContrat__c = 'K00000089Z';
            cont2.CategorieContrat__c = 'VTE';
            cont2.FormeJuridique__c = 'FJC01';
            cont2.Statut__c = 'OUV';
            cont2.TypeReconduction__c = 'RTACerr';
            cont2.NomPartenaire__c = myaccount.Id;
            cont2.DureeInitialeContrat__c = 1;
            cont2.DatePriseEffet__c = System.Today() -2;
            cont2.NombreReconductionsPassees__c = 1;
            cont2.DureeReconduction__c = 1;
            cont2.NombreReconductionsAutorisees__c = 1;
            cont2.DureeProlongationTotale__c = 1;
            insert cont2;

            Document_Contractuel__c doc12 = new Document_Contractuel__c();
            doc12.StatutSynchronisation__c = false;
            doc12.DatePriseEffet__c = myDate;
            doc12.TitreDocument__c = 'test2';
            doc12.DateSignature__c = myDate;
            doc12.NatureDocument__c = 'DOC01';
            doc12.Contrat__c = cont2.id;
            doc12.NiveauDeConfidentialite__c = 'DOC_C02';

            Contrat__c cont3 = new Contrat__c();
            cont3.CategorieContrat__c = 'VTE';
            cont3.DureeReconduction__c = 2;
            cont3.OpportuniteCommerciale__c = opp2.id;
            cont3.DureePreavis__c = 1;
            cont3.EstContratNational__c = true;
            cont3.NombreReconductionsAutorisees__c = 1;
            cont3.DKCodeSurContrat__c = 'K0000008ER';
            cont3.CategorieContrat__c = 'VTE';
            cont3.FormeJuridique__c = 'FJC01';
            cont3.Statut__c = 'OUV';
            cont3.TypeReconduction__c = 'RTACerr';
            cont3.NomPartenaire__c = myaccount.Id;
            cont3.DatePriseEffet__c = System.Today() -2;
            cont3.DureeInitialeContrat__c = 1;
            cont3.NombreReconductionsPassees__c = 1;
            cont3.DureeReconduction__c = 1;
            cont3.NombreReconductionsAutorisees__c = 1;
            cont3.DureeProlongationTotale__c = 1;
            insert cont3;

            Document_Contractuel__c doc13 = new Document_Contractuel__c();
            doc13.StatutSynchronisation__c = false;
            doc13.MajConditionsDuree__c = true;
            doc13.DatePriseEffet__c = myDate;
            doc13.TitreDocument__c = 'test2';
            doc13.DateSignature__c = myDate;
            doc13.NatureDocument__c = 'DOC05';
            doc13.Contrat__c = cont3.id;
            doc13.NiveauDeConfidentialite__c = 'DOC_C02';
            insert doc13;

            List<Document_Contractuel__c> list3Docs = new List<Document_Contractuel__c> {doc12};
            insert list3Docs;

            test.startTest();
            //LC51_CreateContract_Controller.creerContrat(cont8.id);
            LC51_CreateContract_Controller.creerContrat(cont2.id);
            LC51_CreateContract_Controller.creerContrat(cont3.id);

            AP101_DocumentContractuel.updateScan(JSON.serialize(list3Docs));

            test.stopTest();
        }
    }

    @isTest static void coverCodeForCreerContrat21(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp5 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp5.StageName = 'Réalisation';
            opp5.Statut__c = 'Gagnée';
            opp5.Type_pers__c = Label.Renouvellement;
            opp5.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp5.OpportuniteMere__c = opp1.id;
            insert opp5;

            Contrat__c cont8 = new Contrat__c();
            cont8.DureeReconduction__c = 2;
            cont8.OpportuniteCommerciale__c = opp5.id;
            cont8.DureePreavis__c = 1;
            cont8.EstContratNational__c = true;
            cont8.NombreReconductionsAutorisees__c = 1;
            cont8.DKCodeSurContrat__c = 'K00000089Y';
            cont8.CategorieContrat__c = 'VTE';
            cont8.FormeJuridique__c = 'FJC01';
            cont8.Statut__c = 'OUV';
            cont8.TypeReconduction__c = 'RTAC';
            cont8.NomPartenaire__c = myaccount.Id;
            cont8.DureeInitialeContrat__c = 1;
            cont8.DatePriseEffet__c = System.Today() -2;
            cont8.NombreReconductionsPassees__c = 1;
            cont8.DureeReconduction__c = 1;
            cont8.NombreReconductionsAutorisees__c = 1;
            cont8.DureeProlongationTotale__c = 1;
            insert cont8;

            test.startTest();
            LC51_CreateContract_Controller.creerContrat(cont8.id);
            test.stopTest();
        }
    }

    @isTest static void coverCodeForCreerContrat22(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp5 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp5.StageName = 'Réalisation';
            opp5.Statut__c = 'Gagnée';
            opp5.Type_pers__c = Label.Renouvellement;
            opp5.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp5.OpportuniteMere__c = opp1.id;
            insert opp5;

            Contrat__c cont8 = new Contrat__c();
            cont8.DureeReconduction__c = 2;
            cont8.OpportuniteCommerciale__c = opp5.id;
            cont8.DureePreavis__c = 1;
            cont8.EstContratNational__c = true;
            cont8.NombreReconductionsAutorisees__c = 1;
            cont8.DKCodeSurContrat__c = 'K00000089Y';
            cont8.CategorieContrat__c = 'VTE';
            cont8.FormeJuridique__c = 'FJC01';
            cont8.Statut__c = 'OUV';
            cont8.TypeReconduction__c = 'RTAC';
            cont8.NomPartenaire__c = myaccount.Id;
            cont8.DureeInitialeContrat__c = 1;
            cont8.DatePriseEffet__c = System.Today() -2;
            cont8.NombreReconductionsPassees__c = 1;
            cont8.DureeReconduction__c = 1;
            cont8.NombreReconductionsAutorisees__c = 1;
            cont8.DureeProlongationTotale__c = 1;
            insert cont8;

            Document_Contractuel__c doc11 = new Document_Contractuel__c();
            doc11.StatutSynchronisation__c = false;
            doc11.NatureDocument__c = 'DOC01';
            doc11.DatePriseEffet__c = myDate;
            doc11.TitreDocument__c = 'test1';
            doc11.DateSignature__c = myDate;
            doc11.Contrat__c = cont8.id;
            doc11.NiveauDeConfidentialite__c = 'DOC_C02';

            List<Document_Contractuel__c> list3Docs = new List<Document_Contractuel__c> {doc11};
            insert list3Docs;

            test.startTest();
            LC51_CreateContract_Controller.creerContrat(cont8.id);
            test.stopTest();
        }
    }

    @isTest static void coverCodeForCreerContrat23(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            LC51_CreateContract_Controller.getCurrentUserProfile();
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp.StageName = 'Réalisation';
            opp.Statut__c = 'Gagnée';
            opp.Type_pers__c = Label.Renouvellement;
            opp.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp.OpportuniteMere__c = opp1.id;
            insert opp;

            Contrat__c cont = new Contrat__c();
            cont.OpportuniteCommerciale__c = opp.id;
            //cont.DKCodeSurContrat__c = 'K00000089B';
            cont.FormeJuridique__c = 'FJC04';
            cont.TypeReconduction__c = 'RNUL';
            cont.EstContratNational__c = true;
            cont.Tech_ModfierContrat__c = false;
            cont.NomPartenaire__c = myaccount.Id;
            cont.DatePriseEffet__c = System.Today() -2;
            cont.DureeInitialeContrat__c = 1;
            cont.NombreReconductionsPassees__c = 1;
            cont.DureeReconduction__c = 1;
            cont.NombreReconductionsAutorisees__c = 1;
            cont.DureeProlongationTotale__c = 1;
            insert cont;

            Contrat__c cont2 = new Contrat__c();
            cont2.OpportuniteCommerciale__c = opp.id;
            cont2.Tech_ModfierContrat__c = false;
            //cont2.DKCodeSurContrat__c = 'K00000089A';
            cont2.FormeJuridique__c = null;
            cont2.TypeReconduction__c = null;
            cont2.EstContratNational__c = true;
            //cont2.TypeReconduction__c = 'RTACerr';
            cont2.NomPartenaire__c = myaccount.Id;
            cont2.DatePriseEffet__c = System.Today() -2;
            cont2.DureeInitialeContrat__c = 1;
            cont2.NombreReconductionsPassees__c = 1;
            cont2.DureeReconduction__c = 1;
            cont2.NombreReconductionsAutorisees__c = 1;
            cont2.DureeProlongationTotale__c = 1;
            insert cont2;

            Document_Contractuel__c doc1 = new Document_Contractuel__c();
            doc1.ReferenceDocument__c = 'test alain';
            doc1.StatutSynchronisation__c = false;
            doc1.NatureDocument__c = 'DOC05';
            doc1.DatePriseEffet__c = myDate;
            doc1.TitreDocument__c = 'test1';
            doc1.DateSignature__c = myDate;
            doc1.Contrat__c = cont.id;
            doc1.MajConditionsDuree__c = true;
            doc1.NiveauDeConfidentialite__c = 'DOC_C02';
            insert doc1;

            test.startTest();
            LC51_CreateContract_Controller.getCurrentObject(cont.id);
            LC51_CreateContract_Controller.creerContrat(cont.id);
            LC51_CreateContract_Controller.creerContrat(cont2.id);

            cont2.FormeJuridique__c = 'FJC01';
            cont2.TypeReconduction__c = 'RTAC';
            update cont2;

            LC51_CreateContract_Controller.creerContrat(cont.id);
            LC51_CreateContract_Controller.creerContrat(cont2.id);
            test.stopTest();
        }
        //System.assertEquals(null, testObject.CreerContrat(null));
    }
    @isTest static void coverCodeForCreerContrat24(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp2 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp2.StageName = 'Réalisation';
            opp2.Statut__c = 'Gagnée';
            opp2.Type_pers__c = Label.PV_Evolution;
            opp2.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Evolution).getRecordTypeId();
            insert opp2;

            Opportunity opp5 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp5.StageName = 'Réalisation';
            opp5.Statut__c = 'Gagnée';
            opp5.Type_pers__c = Label.Renouvellement;
            opp5.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp5.OpportuniteMere__c = opp1.id;
            insert opp5;

            Contrat__c cont8 = new Contrat__c();
            cont8.DureeReconduction__c = 2;
            cont8.OpportuniteCommerciale__c = opp5.id;
            cont8.DureePreavis__c = 1;
            cont8.EstContratNational__c = true;
            cont8.NombreReconductionsAutorisees__c = 1;
            cont8.DKCodeSurContrat__c = 'K00000089Y';
            cont8.CategorieContrat__c = 'VTE';
            cont8.FormeJuridique__c = 'FJC01';
            cont8.Statut__c = 'OUV';
            cont8.TypeReconduction__c = 'RTAC';
            cont8.NomPartenaire__c = myaccount.Id;
            cont8.DatePriseEffet__c = System.Today() -2;
            cont8.DureeInitialeContrat__c = 1;
            cont8.NombreReconductionsPassees__c = 1;
            cont8.DureeReconduction__c = 1;
            cont8.NombreReconductionsAutorisees__c = 1;
            cont8.DureeProlongationTotale__c = 1;
            //insert cont8;

            Contrat__c cont2 = new Contrat__c();
            cont2.CategorieContrat__c = 'VTE';
            cont2.DureeReconduction__c = 2;
            cont2.OpportuniteCommerciale__c = opp5.id;
            cont2.DureePreavis__c = 1;
            cont2.EstContratNational__c = true;
            cont2.NombreReconductionsAutorisees__c = 1;
            cont2.DKCodeSurContrat__c = 'K00000089Z';
            cont2.CategorieContrat__c = 'VTE';
            cont2.FormeJuridique__c = 'FJC01';
            cont2.Statut__c = 'OUV';
            cont2.TypeReconduction__c = 'RTACerr';
            cont2.NomPartenaire__c = myaccount.Id;
            cont2.DatePriseEffet__c = System.Today() -2;
            cont2.DureeInitialeContrat__c = 1;
            cont2.NombreReconductionsPassees__c = 1;
            cont2.DureeReconduction__c = 1;
            cont2.NombreReconductionsAutorisees__c = 1;
            cont2.DureeProlongationTotale__c = 1;
            insert cont2;

            Document_Contractuel__c doc12 = new Document_Contractuel__c();
            doc12.StatutSynchronisation__c = false;
            doc12.DatePriseEffet__c = myDate;
            doc12.TitreDocument__c = 'test2';
            doc12.DateSignature__c = myDate;
            doc12.NatureDocument__c = 'DOC01';
            doc12.Contrat__c = cont2.id;
            doc12.NiveauDeConfidentialite__c = 'DOC_C02';

            Contrat__c cont3 = new Contrat__c();
            cont3.CategorieContrat__c = 'VTE';
            cont3.DureeReconduction__c = 2;
            cont3.OpportuniteCommerciale__c = opp2.id;
            cont3.DureePreavis__c = 1;
            cont3.EstContratNational__c = true;
            cont3.NombreReconductionsAutorisees__c = 1;
            cont3.DKCodeSurContrat__c = 'K0000008ER';
            cont3.CategorieContrat__c = 'VTE';
            cont3.FormeJuridique__c = 'FJC01';
            cont3.Statut__c = 'OUV';
            cont3.TypeReconduction__c = 'RTACerr';
            cont3.NomPartenaire__c = myaccount.Id;
            cont3.DatePriseEffet__c = System.Today() -2;
            cont3.DureeInitialeContrat__c = 1;
            cont3.NombreReconductionsPassees__c = 1;
            cont3.DureeReconduction__c = 1;
            cont3.NombreReconductionsAutorisees__c = 1;
            cont3.DureeProlongationTotale__c = 1;
            insert cont3;

            Document_Contractuel__c doc13 = new Document_Contractuel__c();
            doc13.StatutSynchronisation__c = false;
            doc13.MajConditionsDuree__c = true;
            doc13.DatePriseEffet__c = myDate;
            doc13.TitreDocument__c = 'test2';
            doc13.DateSignature__c = myDate;
            doc13.NatureDocument__c = 'DOC05';
            doc13.Contrat__c = cont3.id;
            doc13.MajConditionsDuree__c = true;
            doc13.NiveauDeConfidentialite__c = 'DOC_C02';
            insert doc13;

            List<Document_Contractuel__c> list3Docs = new List<Document_Contractuel__c> {doc12};
            insert list3Docs;

            test.startTest();
            //LC51_CreateContract_Controller.creerContrat(cont8.id);
            LC51_CreateContract_Controller.creerContrat(cont2.id);
            LC51_CreateContract_Controller.creerContrat(cont3.id);
            test.stopTest();
        }
    }
    @isTest static void coverCodeForCreerContrat25(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp2 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp2.StageName = 'Réalisation';
            opp2.Statut__c = 'Gagnée';
            opp2.Type_pers__c = Label.PV_Evolution;
            opp2.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Evolution).getRecordTypeId();
            insert opp2;

            Opportunity opp5 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp5.StageName = 'Réalisation';
            opp5.Statut__c = 'Gagnée';
            opp5.Type_pers__c = Label.Renouvellement;
            opp5.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp5.OpportuniteMere__c = opp1.id;
            insert opp5;

            Contrat__c cont8 = new Contrat__c();
            cont8.DureeReconduction__c = 2;
            cont8.OpportuniteCommerciale__c = opp5.id;
            cont8.DureePreavis__c = 1;
            cont8.EstContratNational__c = true;
            cont8.NombreReconductionsAutorisees__c = 1;
            cont8.DKCodeSurContrat__c = 'K00000089Y';
            cont8.CategorieContrat__c = 'VTE';
            cont8.FormeJuridique__c = 'FJC01';
            cont8.Statut__c = 'OUV';
            cont8.TypeReconduction__c = 'RTAC';
            cont8.NomPartenaire__c = myaccount.Id;
            cont8.DatePriseEffet__c = System.Today() -2;
            cont8.DureeInitialeContrat__c = 1;
            cont8.NombreReconductionsPassees__c = 1;
            cont8.DureeReconduction__c = 1;
            cont8.NombreReconductionsAutorisees__c = 1;
            cont8.DureeProlongationTotale__c = 1;
            //insert cont8;

            Contrat__c cont2 = new Contrat__c();
            cont2.CategorieContrat__c = 'VTE';
            cont2.DureeReconduction__c = 2;
            cont2.OpportuniteCommerciale__c = opp5.id;
            cont2.DureePreavis__c = 1;
            cont2.EstContratNational__c = true;
            cont2.NombreReconductionsAutorisees__c = 1;
            cont2.DKCodeSurContrat__c = 'K00000089Z';
            cont2.CategorieContrat__c = 'VTE';
            cont2.FormeJuridique__c = 'FJC01';
            cont2.Statut__c = 'OUV';
            cont2.TypeReconduction__c = 'RTACerr';
            cont2.NomPartenaire__c = myaccount.Id;
            cont2.DatePriseEffet__c = System.Today() -2;
            cont2.DureeInitialeContrat__c = 1;
            cont2.NombreReconductionsPassees__c = 1;
            cont2.DureeReconduction__c = 1;
            cont2.NombreReconductionsAutorisees__c = 1;
            cont2.DureeProlongationTotale__c = 1;
            insert cont2;

            Document_Contractuel__c doc12 = new Document_Contractuel__c();
            doc12.StatutSynchronisation__c = false;
            doc12.DatePriseEffet__c = myDate;
            doc12.TitreDocument__c = 'test2';
            doc12.DateSignature__c = myDate;
            doc12.NatureDocument__c = 'DOC01';
            doc12.Contrat__c = cont2.id;
            doc12.NiveauDeConfidentialite__c = 'DOC_C02';

            Contrat__c cont3 = new Contrat__c();
            cont3.CategorieContrat__c = 'VTE';
            cont3.DureeReconduction__c = 2;
            cont3.OpportuniteCommerciale__c = opp2.id;
            cont3.DureePreavis__c = 1;
            cont3.EstContratNational__c = true;
            cont3.NombreReconductionsAutorisees__c = 1;
            cont3.DKCodeSurContrat__c = 'K0000008ER';
            cont3.CategorieContrat__c = 'VTE';
            cont3.FormeJuridique__c = 'FJC01';
            cont3.Statut__c = 'OUV';
            cont3.TypeReconduction__c = 'RTACerr';
            cont3.NomPartenaire__c = myaccount.Id;
            cont3.DatePriseEffet__c = System.Today() -2;
            cont3.DureeInitialeContrat__c = 1;
            cont3.NombreReconductionsPassees__c = 1;
            cont3.DureeReconduction__c = 1;
            cont3.NombreReconductionsAutorisees__c = 1;
            cont3.DureeProlongationTotale__c = 1;
            insert cont3;

            Document_Contractuel__c doc13 = new Document_Contractuel__c();
            doc13.StatutSynchronisation__c = false;
            doc13.MajConditionsDuree__c = true;
            doc13.DatePriseEffet__c = myDate;
            doc13.TitreDocument__c = 'test2';
            doc13.DateSignature__c = myDate;
            doc13.NatureDocument__c = 'DOC05';
            doc13.Contrat__c = cont3.id;
            doc13.NiveauDeConfidentialite__c = 'DOC_C02';

            insert new List<Document_Contractuel__c> {doc13};

            List<Document_Contractuel__c> list3Docs = new List<Document_Contractuel__c> {doc12};
            insert list3Docs;

            test.startTest();
            //LC51_CreateContract_Controller.creerContrat(cont8.id);
            //LC51_CreateContract_Controller.creerContrat(cont2.id);
            LC51_CreateContract_Controller.creerContrat(cont3.id);
            test.stopTest();
        }
    }
    @isTest static void coverCodeForCreerContrat221(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp5 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp5.StageName = 'Réalisation';
            opp5.Statut__c = 'Gagnée';
            opp5.Type_pers__c = Label.Renouvellement;
            opp5.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp5.OpportuniteMere__c = opp1.id;
            insert opp5;
            Contrat__c cont2 = new Contrat__c();
            cont2.DureeReconduction__c = 2;
            cont2.OpportuniteCommerciale__c = opp5.id;
            cont2.DureePreavis__c = 1;
            cont2.EstContratNational__c = true;
            cont2.NombreReconductionsAutorisees__c = 1;
            cont2.DKCodeSurContrat__c = 'K00000089Z';
            cont2.CategorieContrat__c = 'VTE';
            cont2.FormeJuridique__c = 'FJC01';
            cont2.Statut__c = 'OUV';
            cont2.TypeReconduction__c = 'RTACerr';
            cont2.NomPartenaire__c = myaccount.Id;
            cont2.DatePriseEffet__c = System.Today() -2;
            cont2.DureeInitialeContrat__c = 1;
            cont2.NombreReconductionsPassees__c = 1;
            cont2.DureeReconduction__c = 1;
            cont2.NombreReconductionsAutorisees__c = 1;
            cont2.DureeProlongationTotale__c = 1;
            insert cont2;
            test.startTest();
            LC51_CreateContract_Controller.creerContrat(cont2.id);
            test.stopTest();
        }
    }

    @isTest static void coverCodeForCreerContrat3(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp.StageName = 'Réalisation';
            opp.Statut__c = 'Gagnée';
            opp.Type_pers__c = Label.Renouvellement;
            opp.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp.OpportuniteMere__c = opp1.id;
            insert opp;

            Contrat__c cont1 = new Contrat__c();
            cont1.DureeReconduction__c = 2;
            cont1.OpportuniteCommerciale__c = opp.id;
            cont1.DureePreavis__c = 1;
            cont1.NombreReconductionsAutorisees__c = 1;
            //cont1.DKCodeSurContrat__c = 'K00000089A';
            cont1.CategorieContrat__c = 'VTE';
            cont1.EstContratNational__c = true;
            cont1.FormeJuridique__c = 'FJC01';
            cont1.TypeReconduction__c = 'RTAC';
            cont1.NomPartenaire__c = myaccount.Id;
            cont1.DatePriseEffet__c = System.Today() -2;
            cont1.DureeInitialeContrat__c = 1;
            cont1.NombreReconductionsPassees__c = 1;
            cont1.DureeReconduction__c = 1;
            cont1.NombreReconductionsAutorisees__c = 1;
            cont1.DureeProlongationTotale__c = 1;
            insert cont1;

            Contrat__c cont2 = new Contrat__c();
            cont2.DureeReconduction__c = 2;
            cont2.OpportuniteCommerciale__c = opp.id;
            cont2.DureePreavis__c = 1;
            cont2.NombreReconductionsAutorisees__c = 1;
            //cont1.DKCodeSurContrat__c = 'K00000089A';
            cont2.CategorieContrat__c = 'VTE';
            cont2.EstContratNational__c = true;
            cont2.FormeJuridique__c = 'FJC01';
            cont2.TypeReconduction__c = 'RTACerr';
            cont2.NomPartenaire__c = myaccount.Id;
            cont2.DatePriseEffet__c = System.Today() -2;
            cont2.DureeInitialeContrat__c = 1;
            cont2.NombreReconductionsPassees__c = 1;
            cont2.DureeReconduction__c = 1;
            cont2.NombreReconductionsAutorisees__c = 1;
            cont2.DureeProlongationTotale__c = 1;
            insert cont2;

            test.startTest();
            LC51_CreateContract_Controller.creerContrat(cont1.id);
            LC51_CreateContract_Controller.creerContrat(cont2.id);
            test.stopTest();
        }
    }

    @isTest static void coverCodeForCreerContrat4(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp.StageName = 'Réalisation';
            opp.Statut__c = 'Gagnée';
            opp.Type_pers__c = Label.Renouvellement;
            opp.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp.OpportuniteMere__c = opp1.id;
            insert opp;

            Opportunity opp2 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp2.StageName = 'Réalisation';
            opp2.Statut__c = 'Gagnée';
            Opp2.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp2.Type_pers__c = 'Nouveau';
            opp2.OpportuniteMere__c = opp1.id;
            insert opp2;

            Contrat__c cont2 = new Contrat__c();
            cont2.DureeReconduction__c = 2;
            cont2.OpportuniteCommerciale__c = opp2.id;
            cont2.DureePreavis__c = 1;
            cont2.EstContratNational__c = true;
            cont2.NombreReconductionsAutorisees__c = 1;
            //cont1.DKCodeSurContrat__c = 'K00000089A';
            cont2.CategorieContrat__c = 'VTE';
            cont2.FormeJuridique__c = 'FJC01';
            cont2.TypeReconduction__c = 'RTAC';
            cont2.NomPartenaire__c = myaccount.Id;
            cont2.DatePriseEffet__c = System.Today() -2;
            cont2.DureeInitialeContrat__c = 1;
            cont2.NombreReconductionsPassees__c = 1;
            cont2.DureeReconduction__c = 1;
            cont2.NombreReconductionsAutorisees__c = 1;
            cont2.DureeProlongationTotale__c = 1;
            insert cont2;

            Contrat__c cont3 = new Contrat__c();
            cont3.DureeReconduction__c = 2;
            cont3.OpportuniteCommerciale__c = opp2.id;
            cont3.DureePreavis__c = 1;
            cont3.EstContratNational__c = true;
            cont3.NombreReconductionsAutorisees__c = 1;
            //cont1.DKCodeSurContrat__c = 'K00000089A';
            cont3.CategorieContrat__c = 'VTE';
            cont3.FormeJuridique__c = 'FJC01';
            cont3.TypeReconduction__c = 'RTACee';
            cont3.NomPartenaire__c = myaccount.Id;
            cont3.DatePriseEffet__c = System.Today() -2;
            cont3.DureeInitialeContrat__c = 1;
            cont3.NombreReconductionsPassees__c = 1;
            cont3.DureeReconduction__c = 1;
            cont3.NombreReconductionsAutorisees__c = 1;
            cont3.DureeProlongationTotale__c = 1;
            insert cont3;

            Document_Contractuel__c doc1 = new Document_Contractuel__c();
            doc1.ReferenceDocument__c = 'test alain';
            doc1.StatutSynchronisation__c = false;
            doc1.NatureDocument__c = 'DOC05';
            doc1.DatePriseEffet__c = myDate;
            doc1.TitreDocument__c = 'test1';
            doc1.DateSignature__c = myDate;
            doc1.Contrat__c = cont3.id;
            doc1.MajConditionsDuree__c = true;
            doc1.NiveauDeConfidentialite__c = 'DOC_C02';
            insert doc1;

            test.startTest();
            LC51_CreateContract_Controller.creerContrat(cont2.id);
            LC51_CreateContract_Controller.creerContrat(cont3.id);
            test.stopTest();
        }
    }

    @isTest static void coverCodeForCreerContrat5(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp.StageName = 'Réalisation';
            opp.Statut__c = 'Gagnée';
            opp.Type_pers__c = Label.Renouvellement;
            opp.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp.OpportuniteMere__c = opp1.id;
            insert opp;

            Opportunity opp3 = new Opportunity(Name = 'test', CloseDate = myDate,
                                               Statut__c = 'Gagnée', /*Motif__c='Prix',*/
                                               Annee_de_signature__c = '2017',
                                               StageName = 'Réalisation');
            Opp3.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp3.Type_pers__c = 'Nouveau';
            opp3.OpportuniteMere__c = opp1.id;
            insert opp3;

            Contrat__c cont3 = new Contrat__c();
            cont3.DureeReconduction__c = 2;
            cont3.OpportuniteCommerciale__c = opp3.id;
            cont3.DureePreavis__c = 1;
            cont3.NombreReconductionsAutorisees__c = 1;
            cont3.DKCodeSurContrat__c = 'K00000089D';
            cont3.CategorieContrat__c = 'VTE';
            cont3.FormeJuridique__c = 'FJC01';
            cont3.Statut__c = 'OUV';
            cont3.EstContratNational__c = true;
            cont3.TypeReconduction__c = 'RTAC';
            cont3.NomPartenaire__c = myaccount.Id;
            cont3.DatePriseEffet__c = System.Today() -2;
            cont3.DureeInitialeContrat__c = 1;
            cont3.NombreReconductionsPassees__c = 1;
            cont3.DureeReconduction__c = 1;
            cont3.NombreReconductionsAutorisees__c = 1;
            cont3.DureeProlongationTotale__c = 1;
            insert cont3;

            Document_Contractuel__c doc1 = new Document_Contractuel__c();
            doc1.StatutSynchronisation__c = false;
            doc1.NatureDocument__c = 'DOC05';
            doc1.DatePriseEffet__c = myDate;
            doc1.TitreDocument__c = 'test1';
            doc1.DateSignature__c = myDate;
            doc1.Contrat__c = cont3.id;
            doc1.NiveauDeConfidentialite__c = 'DOC_C02';
            insert doc1;
            /*
            Document_Contractuel__c doc2 = new Document_Contractuel__c();
            doc2.StatutSynchronisation__c = false;
            doc2.NatureDocument__c = 'DOC05';
            doc2.DatePriseEffet__c = myDate;
               doc2.TitreDocument__c ='test2';
            doc2.DateSignature__c = myDate;
            doc2.Contrat__c = cont3.id;
            doc2.MajConditionsDuree__c = true;
            doc2.NiveauDeConfidentialite__c = 'DOC_C02';
            insert doc2;
             */
            Document_Contractuel__c doc3 = new Document_Contractuel__c();
            doc3.StatutSynchronisation__c = false;
            doc3.NatureDocument__c = 'DOC02';
            doc3.DatePriseEffet__c = myDate;
            doc3.DateSignature__c = myDate;
            doc3.TitreDocument__c = 'test3';
            doc3.Contrat__c = cont3.id;
            doc3.MajConditionsDuree__c = true;
            doc3.NiveauDeConfidentialite__c = 'DOC_C02';
            insert doc3;

            test.startTest();
            LC51_CreateContract_Controller.creerContrat(cont3.id);
            test.stopTest();
        }
    }

    @isTest static void coverCodeForCreerContrat52(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp.StageName = 'Réalisation';
            opp.Statut__c = 'Gagnée';
            opp.Type_pers__c = Label.Renouvellement;
            opp.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp.OpportuniteMere__c = opp1.id;
            insert opp;

            Opportunity opp3 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp3.StageName = 'Réalisation';
            opp3.Statut__c = 'Gagnée';
            opp3.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp3.Type_pers__c = Label.Renouvellement;
            opp3.OpportuniteMere__c = opp1.id;
            insert opp3;

            Contrat__c cont3 = new Contrat__c();
            cont3.DureeReconduction__c = 2;
            cont3.OpportuniteCommerciale__c = opp3.id;
            cont3.DureePreavis__c = 1;
            cont3.NombreReconductionsAutorisees__c = 1;
            cont3.DKCodeSurContrat__c = 'K00000089D';
            cont3.CategorieContrat__c = 'VTE';
            cont3.FormeJuridique__c = 'FJC01';
            cont3.Statut__c = 'OUV';
            cont3.EstContratNational__c = true;
            cont3.TypeReconduction__c = 'RTAC';
            cont3.NomPartenaire__c = myaccount.Id;
            cont3.DatePriseEffet__c = System.Today() -2;
            cont3.DureeInitialeContrat__c = 1;
            cont3.NombreReconductionsPassees__c = 1;
            cont3.DureeReconduction__c = 1;
            cont3.NombreReconductionsAutorisees__c = 1;
            cont3.DureeProlongationTotale__c = 1;
            insert cont3;

            Document_Contractuel__c doc2 = new Document_Contractuel__c();
            doc2.StatutSynchronisation__c = false;
            doc2.NumeroPiece__c = '123';
            doc2.NatureDocument__c = 'DOC05';
            doc2.TitreDocument__c = 'test3';
            doc2.DatePriseEffet__c = myDate;
            doc2.DateSignature__c = myDate;
            doc2.Contrat__c = cont3.id;
            doc2.NiveauDeConfidentialite__c = 'DOC_C02';
            insert doc2;

            test.startTest();
            LC51_CreateContract_Controller.creerContrat(cont3.id);
            test.stopTest();
        }
    }

    @isTest static void coverCodeForCreerContrat53(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp.StageName = 'Réalisation';
            opp.Statut__c = 'Gagnée';
            opp.Type_pers__c = Label.Renouvellement;
            opp.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp.OpportuniteMere__c = opp1.id;
            insert opp;

            Opportunity opp3 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp3.StageName = 'Réalisation';
            opp3.Statut__c = 'Gagnée';
            opp3.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp3.Type_pers__c = Label.Renouvellement;
            opp3.OpportuniteMere__c = opp1.id;
            insert opp3;

            Contrat__c cont3 = new Contrat__c();
            cont3.DureeReconduction__c = 2;
            cont3.OpportuniteCommerciale__c = opp3.id;
            cont3.DureePreavis__c = 1;
            cont3.NombreReconductionsAutorisees__c = 1;
            cont3.DKCodeSurContrat__c = 'K00000089D';
            cont3.CategorieContrat__c = 'VTE';
            cont3.FormeJuridique__c = 'FJC01';
            cont3.Statut__c = 'OUV';
            cont3.EstContratNational__c = true;
            cont3.TypeReconduction__c = 'RTAC';
            cont3.NomPartenaire__c = myaccount.Id;
            cont3.DatePriseEffet__c = System.Today() -2;
            cont3.DureeInitialeContrat__c = 1;
            cont3.NombreReconductionsPassees__c = 1;
            cont3.DureeReconduction__c = 1;
            cont3.NombreReconductionsAutorisees__c = 1;
            cont3.DureeProlongationTotale__c = 1;
            insert cont3;

            Document_Contractuel__c doc3 = new Document_Contractuel__c();
            doc3.StatutSynchronisation__c = false;
            doc3.TitreDocument__c = 'test2';
            doc3.DatePriseEffet__c = myDate;
            doc3.DateSignature__c = myDate;
            doc3.NatureDocument__c = 'DOC01';
            doc3.Contrat__c = cont3.id;
            doc3.NiveauDeConfidentialite__c = 'DOC_C02';
            insert doc3;

            test.startTest();
            LC51_CreateContract_Controller.creerContrat(cont3.id);
            test.stopTest();
        }
    }


    @isTest static void coverCodeForCreerContrat6(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp.StageName = 'Réalisation';
            opp.Statut__c = 'Gagnée';
            opp.Type_pers__c = Label.Renouvellement;
            opp.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp.OpportuniteMere__c = opp1.id;
            insert opp;

            Opportunity opp3 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp3.StageName = 'Réalisation';
            //Opp3.Record_type__c=Label.OppType_EvRen;
            opp3.Statut__c = 'Gagnée';
            opp3.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp3.Type_pers__c = Label.Renouvellement;
            opp3.OpportuniteMere__c = opp1.id;
            insert opp3;

            Contrat__c cont4 = new Contrat__c();
            cont4.DureeReconduction__c = 2;
            cont4.OpportuniteCommerciale__c = opp3.id;
            cont4.DureePreavis__c = 1;
            cont4.NombreReconductionsAutorisees__c = 1;
            cont4.DKCodeSurContrat__c = 'K00000089F';
            cont4.CategorieContrat__c = 'VTE';
            cont4.EstContratNational__c = true;
            cont4.FormeJuridique__c = 'FJC01';
            cont4.TypeReconduction__c = 'RTAC';
            cont4.NomPartenaire__c = myaccount.Id;
            cont4.DatePriseEffet__c = System.Today() -2;
            cont4.DureeInitialeContrat__c = 1;
            cont4.NombreReconductionsPassees__c = 1;
            cont4.DureeReconduction__c = 1;
            cont4.NombreReconductionsAutorisees__c = 1;
            cont4.DureeProlongationTotale__c = 1;
            insert cont4;

            Document_Contractuel__c doc = new Document_Contractuel__c();
            doc.StatutSynchronisation__c = false;
            doc.NatureDocument__c = 'DOC05';
            doc.DatePriseEffet__c = myDate;
            doc.TitreDocument__c = 'test2';
            doc.DateSignature__c = myDate;
            doc.Contrat__c = cont4.id;
            doc.NiveauDeConfidentialite__c = 'DOC_C02';
            insert doc;

            test.startTest();
            LC51_CreateContract_Controller.creerContrat(cont4.id);
            test.stopTest();
        }
    }

    @isTest static void coverCodeForCreerContrat7(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp4 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp4.StageName = 'Réalisation';
            opp4.Statut__c = 'Gagnée';
            opp4.Type_pers__c = Label.Renouvellement;
            opp4.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp4.OpportuniteMere__c = opp1.id;
            insert opp4;

            Contrat__c cont5 = new Contrat__c();
            cont5.DureeReconduction__c = 2;
            cont5.OpportuniteCommerciale__c = opp4.id;
            cont5.DureePreavis__c = 1;
            cont5.NombreReconductionsAutorisees__c = 1;
            cont5.DKCodeSurContrat__c = 'K00000089J';
            cont5.CategorieContrat__c = 'VTE';
            cont5.EstContratNational__c = true;
            cont5.FormeJuridique__c = 'FJC01';
            cont5.Statut__c = 'OUV';
            cont5.TypeReconduction__c = 'RTAC';
            cont5.NomPartenaire__c = myaccount.Id;
            cont5.DatePriseEffet__c = System.Today() -2;
            cont5.DureeInitialeContrat__c = 1;
            cont5.NombreReconductionsPassees__c = 1;
            cont5.DureeReconduction__c = 1;
            cont5.NombreReconductionsAutorisees__c = 1;
            cont5.DureeProlongationTotale__c = 1;
            insert cont5;

            Document_Contractuel__c doc4 = new Document_Contractuel__c();
            doc4.StatutSynchronisation__c = false;
            doc4.NatureDocument__c = 'DOC05';
            doc4.TitreDocument__c = 'test2';
            doc4.DatePriseEffet__c = myDate;
            doc4.DateSignature__c = myDate;
            doc4.Contrat__c = cont5.id;
            doc4.NiveauDeConfidentialite__c = 'DOC_C02';

            List<Document_Contractuel__c> list2Docs = new List<Document_Contractuel__c> {doc4};
            insert list2Docs;

            test.startTest();
            LC51_CreateContract_Controller.creerContrat(cont5.id);
            test.stopTest();
        }
    }

    @isTest static void coverCodeForCreerContrat72(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp4 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp4.StageName = 'Réalisation';
            opp4.Statut__c = 'Gagnée';
            opp4.Type_pers__c = Label.Renouvellement;
            opp4.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp4.OpportuniteMere__c = opp1.id;
            insert opp4;

            Contrat__c cont5 = new Contrat__c();
            cont5.DureeReconduction__c = 2;
            cont5.OpportuniteCommerciale__c = opp4.id;
            cont5.DureePreavis__c = 1;
            cont5.NombreReconductionsAutorisees__c = 1;
            cont5.DKCodeSurContrat__c = 'K00000089J';
            cont5.CategorieContrat__c = 'VTE';
            cont5.EstContratNational__c = true;
            cont5.FormeJuridique__c = 'FJC01';
            cont5.Statut__c = 'OUV';
            cont5.TypeReconduction__c = 'RTAC';
            cont5.NomPartenaire__c = myaccount.Id;
            cont5.DatePriseEffet__c = System.Today() -2;
            cont5.DureeInitialeContrat__c = 1;
            cont5.NombreReconductionsPassees__c = 1;
            cont5.DureeReconduction__c = 1;
            cont5.NombreReconductionsAutorisees__c = 1;
            cont5.DureeProlongationTotale__c = 1;
            insert cont5;

            Document_Contractuel__c doc5 = new Document_Contractuel__c();
            doc5.StatutSynchronisation__c = false;
            doc5.NatureDocument__c = 'DOC05';
            doc5.TitreDocument__c = 'test2';
            doc5.DatePriseEffet__c = myDate;
            doc5.DateSignature__c = myDate;
            doc5.Contrat__c = cont5.id;
            doc5.NiveauDeConfidentialite__c = 'DOC_C02';

            List<Document_Contractuel__c> list2Docs = new List<Document_Contractuel__c> {doc5};
            insert list2Docs;

            test.startTest();
            LC51_CreateContract_Controller.creerContrat(cont5.id);
            test.stopTest();
        }
    }

    @isTest static void coverCodeForCreerContrat73(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp4 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp4.StageName = 'Réalisation';
            opp4.Statut__c = 'Gagnée';
            opp4.Type_pers__c = Label.Renouvellement;
            opp4.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp4.OpportuniteMere__c = opp1.id;
            insert opp4;

            Contrat__c cont5 = new Contrat__c();
            cont5.DureeReconduction__c = 2;
            cont5.OpportuniteCommerciale__c = opp4.id;
            cont5.DureePreavis__c = 1;
            cont5.NombreReconductionsAutorisees__c = 1;
            cont5.DKCodeSurContrat__c = 'K00000089J';
            cont5.CategorieContrat__c = 'VTE';
            cont5.EstContratNational__c = true;
            cont5.FormeJuridique__c = 'FJC01';
            cont5.Statut__c = 'OUV';
            cont5.TypeReconduction__c = 'RTAC';
            cont5.NomPartenaire__c = myaccount.Id;
            cont5.DatePriseEffet__c = System.Today() -2;
            cont5.DureeInitialeContrat__c = 1;
            cont5.NombreReconductionsPassees__c = 1;
            cont5.DureeReconduction__c = 1;
            cont5.NombreReconductionsAutorisees__c = 1;
            cont5.DureeProlongationTotale__c = 1;
            insert cont5;

            Document_Contractuel__c doc6 = new Document_Contractuel__c();
            doc6.StatutSynchronisation__c = false;
            doc6.TitreDocument__c = 'test2';
            doc6.NumeroPiece__c = '123';
            doc6.NatureDocument__c = 'DOC05';
            doc6.DatePriseEffet__c = myDate;
            doc6.DateSignature__c = myDate;
            doc6.Contrat__c = cont5.id;
            doc6.NiveauDeConfidentialite__c = 'DOC_C02';
            List<Document_Contractuel__c> list2Docs = new List<Document_Contractuel__c> {doc6};
            insert list2Docs;

            test.startTest();
            LC51_CreateContract_Controller.creerContrat(cont5.id);
            test.stopTest();
        }
    }

    @isTest static void coverCodeForCreerContrat74(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp4 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp4.StageName = 'Réalisation';
            opp4.Statut__c = 'Gagnée';
            opp4.Type_pers__c = Label.Renouvellement;
            opp4.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp4.OpportuniteMere__c = opp1.id;
            insert opp4;

            Contrat__c cont5 = new Contrat__c();
            cont5.DureeReconduction__c = 2;
            cont5.OpportuniteCommerciale__c = opp4.id;
            cont5.DureePreavis__c = 1;
            cont5.NombreReconductionsAutorisees__c = 1;
            cont5.DKCodeSurContrat__c = 'K00000089J';
            cont5.CategorieContrat__c = 'VTE';
            cont5.EstContratNational__c = true;
            cont5.FormeJuridique__c = 'FJC01';
            cont5.Statut__c = 'OUV';
            cont5.TypeReconduction__c = 'RTAC';
            cont5.NomPartenaire__c = myaccount.Id;
            cont5.DatePriseEffet__c = System.Today() -2;
            cont5.DureeInitialeContrat__c = 1;
            cont5.NombreReconductionsPassees__c = 1;
            cont5.DureeReconduction__c = 1;
            cont5.NombreReconductionsAutorisees__c = 1;
            cont5.DureeProlongationTotale__c = 1;
            insert cont5;

            Document_Contractuel__c doc7 = new Document_Contractuel__c();
            doc7.StatutSynchronisation__c = false;
            doc7.NatureDocument__c = 'DOC01';
            doc7.DatePriseEffet__c = myDate;
            doc7.TitreDocument__c = 'test8';
            doc7.DateSignature__c = myDate;
            doc7.Contrat__c = cont5.id;
            doc7.NiveauDeConfidentialite__c = 'DOC_C02';

            List<Document_Contractuel__c> list2Docs = new List<Document_Contractuel__c> {doc7};
            insert list2Docs;

            test.startTest();
            LC51_CreateContract_Controller.creerContrat(cont5.id);
            test.stopTest();
        }
    }

    @isTest static void coverCodeForCreerContrat8(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp5 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp5.StageName = 'Réalisation';
            opp5.Statut__c = 'Gagnée';
            opp5.Type_pers__c = Label.Renouvellement;
            opp5.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp5.OpportuniteMere__c = opp1.id;
            insert opp5;

            Contrat__c cont6 = new Contrat__c();
            cont6.DureeReconduction__c = 2;
            cont6.OpportuniteCommerciale__c = opp5.id;
            cont6.DureePreavis__c = 1;
            cont6.NombreReconductionsAutorisees__c = 1;
            cont6.Statut__c = 'OUV';
            cont6.EstContratNational__c = true;
            cont6.DKCodeSurContrat__c = 'K00000089X';
            cont6.CategorieContrat__c = 'VTE';
            cont6.FormeJuridique__c = 'FJC01';
            cont6.TypeReconduction__c = 'RTAC';
            cont6.NomPartenaire__c = myaccount.Id;
            cont6.DatePriseEffet__c = System.Today() -2;
            cont6.DureeInitialeContrat__c = 1;
            cont6.NombreReconductionsPassees__c = 1;
            cont6.DureeReconduction__c = 1;
            cont6.NombreReconductionsAutorisees__c = 1;
            cont6.DureeProlongationTotale__c = 1;
            insert cont6;

            Document_Contractuel__c doc8 = new Document_Contractuel__c();
            doc8.StatutSynchronisation__c = false;
            doc8.NatureDocument__c = 'DOC05';
            doc8.DatePriseEffet__c = myDate;
            doc8.TitreDocument__c = 'test1';
            doc8.DateSignature__c = myDate;
            doc8.Contrat__c = cont6.id;
            doc8.NiveauDeConfidentialite__c = 'DOC_C02';

            Document_Contractuel__c doc9 = new Document_Contractuel__c();
            doc9.StatutSynchronisation__c = false;
            doc9.TitreDocument__c = 'test2';
            doc9.NatureDocument__c = 'DOC05';
            doc9.DatePriseEffet__c = myDate;
            doc9.DateSignature__c = myDate;
            doc9.MajConditionsDuree__c = true;
            doc9.Contrat__c = cont6.id;
            doc9.NiveauDeConfidentialite__c = 'DOC_C02';

            Document_Contractuel__c doc7 = new Document_Contractuel__c();
            doc7.StatutSynchronisation__c = false;
            doc7.NatureDocument__c = 'DOC01';
            doc7.DatePriseEffet__c = myDate;
            doc7.TitreDocument__c = 'test3';
            doc7.DateSignature__c = myDate;
            doc7.MajConditionsDuree__c = true;
            doc7.Contrat__c = cont6.id;
            doc7.NiveauDeConfidentialite__c = 'DOC_C02';

            Document_Contractuel__c doc6 = new Document_Contractuel__c();
            doc6.StatutSynchronisation__c = false;
            doc6.NatureDocument__c = 'DOC05';
            doc6.DatePriseEffet__c = myDate;
            doc6.DateSignature__c = myDate;
            doc6.TitreDocument__c = 'test4';
            doc6.MajConditionsDuree__c = true;
            doc6.Contrat__c = cont6.id;
            doc6.NiveauDeConfidentialite__c = 'DOC_C02';

            List<Document_Contractuel__c> list3Docs = new List<Document_Contractuel__c> {doc8, doc9, doc7, doc6};
            insert list3Docs;

            test.startTest();
            LC51_CreateContract_Controller.creerContrat(cont6.id);
            test.stopTest();
        }
    }

    @isTest static void coverCodeForCreerContrat82(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp5 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp5.StageName = 'Réalisation';
            Opp5.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp5.Statut__c = 'Gagnée';
            opp5.Type_pers__c = Label.Renouvellement;
            opp5.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp5.OpportuniteMere__c = opp1.id;
            insert opp5;

            Contrat__c cont6 = new Contrat__c();
            cont6.DureeReconduction__c = 2;
            cont6.OpportuniteCommerciale__c = opp5.id;
            cont6.DureePreavis__c = 1;
            cont6.NombreReconductionsAutorisees__c = 1;
            cont6.EstContratNational__c = true;
            cont6.DKCodeSurContrat__c = 'K00000089X';
            cont6.CategorieContrat__c = 'VTE';
            cont6.FormeJuridique__c = 'FJC01';
            cont6.TypeReconduction__c = 'RTAC';
            cont6.NomPartenaire__c = myaccount.Id;
            cont6.DatePriseEffet__c = System.Today() -2;
            cont6.DureeInitialeContrat__c = 1;
            cont6.NombreReconductionsPassees__c = 1;
            cont6.DureeReconduction__c = 1;
            cont6.NombreReconductionsAutorisees__c = 1;
            cont6.DureeProlongationTotale__c = 1;
            insert cont6;

            Document_Contractuel__c doc9 = new Document_Contractuel__c();
            doc9.StatutSynchronisation__c = false;
            doc9.NatureDocument__c = 'DOC05';
            doc9.DatePriseEffet__c = myDate;
            doc9.DateSignature__c = myDate;
            doc9.Contrat__c = cont6.id;
            doc9.TitreDocument__c = 'test1';
            doc9.NiveauDeConfidentialite__c = 'DOC_C02';

            List<Document_Contractuel__c> list3Docs = new List<Document_Contractuel__c> {doc9};
            insert list3Docs;

            test.startTest();
            LC51_CreateContract_Controller.creerContrat(cont6.id);
            test.stopTest();
        }
    }

    @isTest static void coverCodeForCreerContrat83(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp5 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp5.StageName = 'Réalisation';
            opp5.Statut__c = 'Gagnée';
            opp5.Type_pers__c = Label.Renouvellement;
            opp5.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp5.OpportuniteMere__c = opp1.id;
            insert opp5;

            Contrat__c cont6 = new Contrat__c();
            cont6.DureeReconduction__c = 2;
            cont6.OpportuniteCommerciale__c = opp5.id;
            cont6.DureePreavis__c = 1;
            cont6.NombreReconductionsAutorisees__c = 1;
            cont6.EstContratNational__c = true;
            cont6.DKCodeSurContrat__c = 'K00000089X';
            cont6.CategorieContrat__c = 'VTE';
            cont6.FormeJuridique__c = 'FJC01';
            cont6.TypeReconduction__c = 'RTAC';
            cont6.NomPartenaire__c = myaccount.Id;
            cont6.DatePriseEffet__c = System.Today() -2;
            cont6.DureeInitialeContrat__c = 1;
            cont6.NombreReconductionsPassees__c = 1;
            cont6.DureeReconduction__c = 1;
            cont6.NombreReconductionsAutorisees__c = 1;
            cont6.DureeProlongationTotale__c = 1;
            insert cont6;

            Document_Contractuel__c doc10 = new Document_Contractuel__c();
            doc10.DatePriseEffet__c = myDate;
            doc10.TitreDocument__c = 'test2';
            doc10.DateSignature__c = myDate;
            doc10.StatutSynchronisation__c = false;
            doc10.NumeroPiece__c = '123';
            doc10.NatureDocument__c = 'DOC05';
            doc10.Contrat__c = cont6.id;
            doc10.NiveauDeConfidentialite__c = 'DOC_C02';

            List<Document_Contractuel__c> list3Docs = new List<Document_Contractuel__c> {doc10};
            insert list3Docs;

            test.startTest();
            LC51_CreateContract_Controller.creerContrat(cont6.id);
            test.stopTest();
        }
    }

    @isTest static void coverCodeForCreerContrat9(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            Opportunity opp1 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Qualification');
            opp1.Type_pers__c = Label.Renouvellement;
            opp1.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Mere).getRecordTypeId();
            opp1.EstOpportuniteMere__c = true;
            insert opp1;

            Opportunity opp5 = TestUtils.createOpportunity('test', myDate, 'Gagnée', 'Réalisation');
            opp5.StageName = 'Réalisation';
            opp5.Statut__c = 'Gagnée';
            opp5.Type_pers__c = Label.Renouvellement;
            opp5.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            opp5.OpportuniteMere__c = opp1.id;
            insert opp5;

            Contrat__c cont7 = new Contrat__c();
            cont7.DureeReconduction__c = 2;
            cont7.OpportuniteCommerciale__c = opp5.id;
            cont7.DureePreavis__c = 1;
            cont7.NombreReconductionsAutorisees__c = 1;
            //cont7.DKCodeSurContrat__c = 'K00000089X';
            cont7.CategorieContrat__c = 'VTE';
            cont7.EstContratNational__c = true;
            cont7.FormeJuridique__c = 'FJC01';
            cont7.Statut__c = 'OUV';
            cont7.TypeReconduction__c = 'RTAC';
            cont7.NomPartenaire__c = myaccount.Id;
            cont7.DatePriseEffet__c = System.Today() -2;
            cont7.DureeInitialeContrat__c = 1;
            cont7.NombreReconductionsPassees__c = 1;
            cont7.DureeReconduction__c = 1;
            cont7.NombreReconductionsAutorisees__c = 1;
            cont7.DureeProlongationTotale__c = 1;
            insert cont7;

            test.startTest();
            LC51_CreateContract_Controller.creerContrat(cont7.id);
            test.stopTest();
        }
    }

    /*@isTest static void coverCodeForCreerModifierResumeContrat(){
       Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
       wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
       System.assertEquals(null, testObject.CreerModifierResumeContrat(null));
       }*/
    @isTest static void coverCodeForModifierContrat(){
        Profile p = [SELECT Id FROM Profile WHERE id =: Label.AdminProfileId ];
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        insert u2;
        System.runAs(u2){
            User u1 = testUtils.CreateUser('standt18', 'standardusereee@testorg1.com', 'Testing', p.Id, 'standarduser1rrr@testorg.com');
            insert u1;
            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            opportunity myOpp = testUtils.createOpportunity ('testOpp1', date.today(), null, 'Piste');
            myOpp.AccountId = myaccount.Id;
            myOpp.closeDate = Date.today();
            myOpp.Type_pers__c = Label.Renouvellement;
            myOpp.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            myOpp.StageName = 'Piste';
            myOpp.Statut__c = 'En cours';
            myOpp.TypeReconduction__c = 'RNUL';
            insert myOpp;

            Contrat__c cont = new Contrat__c();
            cont.DKCodeSurContrat__c = 'K00000089B';
            cont.OpportuniteCommerciale__c = myOpp.id;
            cont.OwnerId = u1.id;
            cont.Statut__c = 'FER';
            cont.Validation_Id__c = u1.id;
            cont.NomPartenaire__c = myaccount.Id;
            cont.TypeReconduction__c = 'RNUL';
            cont.DatePriseEffet__c = System.Today() -2;
            cont.DureeInitialeContrat__c = 1;
            cont.NombreReconductionsPassees__c = 1;
            cont.DureeReconduction__c = 1;
            cont.NombreReconductionsAutorisees__c = 1;
            cont.DureeProlongationTotale__c = 1;
            insert cont;

            Contrat__c cont2 = new Contrat__c();
            cont2.DKCodeSurContrat__c = 'K00000089F';
            cont2.OpportuniteCommerciale__c = myOpp.id;
            cont2.OwnerId = u1.id;
            cont2.Statut__c = 'OUV';
            cont2.Validation_Id__c = u1.id;
            cont2.NomPartenaire__c = myaccount.Id;
            cont2.DatePriseEffet__c = System.Today() -2;
            cont2.DureeInitialeContrat__c = 1;
            cont2.NombreReconductionsPassees__c = 1;
            cont2.DureeReconduction__c = 1;
            cont2.NombreReconductionsAutorisees__c = 1;
            cont2.DureeProlongationTotale__c = 1;
            insert cont2;

            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            Document_Contractuel__c doc = new Document_Contractuel__c();
            doc.Contrat__c = cont2.id;
            doc.NatureDocument__c = 'DOC01';
            doc.TitreDocument__c = 'test';
            doc.TitreDocument__c = 'test1';
            doc.DatePriseEffet__c = myDate;
            doc.DateSignature__c = myDate;
            doc.NiveauDeConfidentialite__c = 'DOC_C02';
            insert doc;

            Document_Contractuel__c doc2 = new Document_Contractuel__c();
            doc2.Contrat__c = cont.id;
            doc2.NumeroPiece__c = '1234';
            doc2.NatureDocument__c = 'DOC01';
            doc2.TitreDocument__c = 'test';
            doc2.TitreDocument__c = 'test1';
            doc2.DatePriseEffet__c = myDate;
            doc2.DateSignature__c = myDate;
            doc2.NiveauDeConfidentialite__c = 'DOC_C02';
            insert doc2;

            test.startTest();
            List<Contrat__c> contList = new List<Contrat__c>();
            contList.add(cont);
            update contList;

            cont2.Commentaire__c = 'test';
            cont2.Statut__c = 'ENFER';
            update cont2;

            cont2.Statut__c = 'FER';
            update cont2;

            //AP48_ContractCallouts.handleList(contList,'update');
            test.stopTest();
        }
    }

    /*@isTest static void coverCodeForModifierContratCID(){
       Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
       wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
       System.assertEquals(null, testObject.ModifierContratCID(null));
       }*/
    @isTest static void coverCodeForModifierDocumentContractuel(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        //System.assertEquals(null, testObject.ModifierDocumentContractuel(null));
    }
    /*@isTest static void coverCodeForRechercherContrat(){
       Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
       wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
       System.assertEquals(null, testObject.RechercherContrat(null));
       }*/
    @isTest static void coverCodeForRenouvelerContrat(){
        Test.setMock(WebServiceMock.class, new wwwDalkiaFrReferentielContratMockImpl());
        wwwDalkiaFrReferentielContrat.ContratServicePort testObject = new wwwDalkiaFrReferentielContrat.ContratServicePort();
        Profile p = [SELECT Id FROM Profile WHERE id =:Label.AdminProfileId];
        User u2 = testUtils.CreateUser('standt28', 'user21111@testorg2.com', 'Testing2', p.Id, 'user2rrr@testorg2.com');
        u2.Code_d_Appartenance__c = 'OCECOM2';
        u2.BypassValidationRules__c = true;
        u2.BypassFilters__c = true;
        u2.Bypass_Triggers__c = 'AP08_Opportunity;AP14_OppRollUpSummaryUtility;AP07_Opportunity;AP17_BudgetOnOpp;AP09_Opportunity;AP24_OpportunityFDS;';
        u2.Bypass_Triggers__c += 'AP57_Affaire;AP25_OpportunityAvntRealise;AP05_Opportunity;AP15_Budget;AP08_Opportunity;AP38_OpportunityContratCadre;AP52_DocumentContractuel';
        PAD.PAD_BypassTrigger += u2.Bypass_Triggers__c;
        insert u2;
        System.runAs(u2){
            account myaccount = testUtils.createAccount('testAccount', 'Lebanon', 'Privé');
            myaccount.Lieu_immatriculation_legale__c = 'test';
            insert myaccount;

            opportunity myOpp = testUtils.createOpportunity ('testOpp1', date.today(), null, 'Piste');
            myOpp.AccountId = myaccount.Id;
            myOpp.closeDate = Date.today();
            myOpp.StageName = 'Réalisation';
            myOpp.Type_pers__c = Label.Renouvellement;
            myOpp.RecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByDeveloperName().get(Label.RT_Opp_Creation).getRecordTypeId();
            myOpp.Statut__c = 'Gagnée';
            insert myOpp;

            Contrat__c cont = new Contrat__c();
            cont.DKCodeSurContrat__c = 'K00000089B';
            cont.OpportuniteCommerciale__c = myOpp.id;
            cont.FormeJuridique__c = 'FJC01';
            cont.CategorieContrat__c = 'VTE';
            cont.TypeReconduction__c = 'RTAC';
            cont.NomPartenaire__c = myaccount.Id;
            cont.DureeInitialeContrat__c = 1;
            cont.DatePriseEffet__c = System.Today() -2;
            cont.NombreReconductionsPassees__c = 1;
            cont.DureeReconduction__c = 1;
            cont.NombreReconductionsAutorisees__c = 1;
            cont.DureeProlongationTotale__c = 1;
            insert cont;

            Date myDate = Date.newInstance(2019, 03, 20);
            Time myTime = Time.newInstance(9, 11, 44, 88);
            DateTime dt = DateTime.newInstance(myDate, myTime);

            Document_Contractuel__c doc = new Document_Contractuel__c();
            doc.Contrat__c = cont.id;
            doc.NumeroPiece__c = '123';
            doc.NatureDocument__c = 'DOC01';
            doc.TitreDocument__c = 'test';
            doc.DatePriseEffet__c = myDate;
            doc.TitreDocument__c = 'test1';
            doc.DateSignature__c = myDate;
            doc.NiveauDeConfidentialite__c = 'DOC_C02';
            insert doc;

            Contrat__c cont2 = new Contrat__c();
            cont2.OpportuniteCommerciale__c = myOpp.id;
            cont2.FormeJuridique__c = 'FJC01';
            cont2.CategorieContrat__c = 'VTE';
            cont2.TypeReconduction__c = 'RTAC';
            cont2.NomPartenaire__c = myaccount.Id;
            cont2.DureeInitialeContrat__c = 1;
            cont2.DatePriseEffet__c = System.Today() -2;
            cont2.NombreReconductionsPassees__c = 1;
            cont2.DureeReconduction__c = 1;
            cont2.NombreReconductionsAutorisees__c = 1;
            cont2.DureeProlongationTotale__c = 1;
            insert cont2;

            Document_Contractuel__c doc2 = new Document_Contractuel__c();
            doc2.Contrat__c = cont2.id;
            doc2.NumeroPiece__c = '123';
            doc2.NatureDocument__c = 'DOC01';
            doc2.TitreDocument__c = 'test';
            doc2.DatePriseEffet__c = myDate;
            doc2.TitreDocument__c = 'test1';
            doc2.DateSignature__c = myDate;
            doc2.NiveauDeConfidentialite__c = 'DOC_C02';
            insert doc2;

            LC51_CreateContract_Controller.checkIfModeMaintenance();
            Mode_Maintenance__c mm = new Mode_Maintenance__c();
            mm.En_mode_maintenance__c = true;
            insert mm;
            LC51_CreateContract_Controller.checkIfModeMaintenance();

            test.startTest();
            LC51_CreateContract_Controller.creerContrat(cont.id);
            LC51_CreateContract_Controller.creerContrat(cont2.id);
            test.stopTest();
        }
        //System.assertEquals(null, testObject.RenouvelerContrat(null));
    }

    @isTest
    static void coverCodeForConsulterDocument(){
        StaticResourceCalloutMock mock = new StaticResourceCalloutMock();
        Test.setMock(HttpCalloutMock.class, mock);
        Test.setCurrentPageReference(new PageReference('Page.myPage'));
        System.currentPageReference().getParameters().put('numPiece', 'C00001331L-0001');
        test.startTest();
        LC51_CreateContract_Controller.getConsulterDocument();
        test.stopTest();
    }

}